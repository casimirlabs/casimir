{
  "version": "3.4",
  "log": [
    {
      "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:10",
        "version": {
          "withMetadata": "0c38095bc7278345bee7d7f7c6850a6a2a82b10138f160e3cf416db113c06baf",
          "withoutMetadata": "76b15d1ca033d7194cb77201f772678e489e02f07e0b94be41018e38861d3d96",
          "linkedWithoutMetadata": "76b15d1ca033d7194cb77201f772678e489e02f07e0b94be41018e38861d3d96"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwner",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal": {
        "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:10",
        "version": {
          "withMetadata": "862e873b5b60501bbd8e19e2c0c507b80f33e7b7d3f1d495ec4bc0cd10644908",
          "withoutMetadata": "62cb26f83a4b5f8c08dc187c38c69b4359f8402eb9f6df7ec94532e7b675a85c",
          "linkedWithoutMetadata": "62cb26f83a4b5f8c08dc187c38c69b4359f8402eb9f6df7ec94532e7b675a85c"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwnerWithProposal",
            "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/dev/AuthorizedReceiver.sol:AuthorizedReceiver": {
        "src": "@chainlink/contracts/src/v0.8/dev/AuthorizedReceiver.sol:7",
        "inherit": [
          "@chainlink/contracts/src/v0.8/dev/interfaces/AuthorizedReceiverInterface.sol:AuthorizedReceiverInterface"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "setAuthorizedSenders(address[])",
          "getAuthorizedSenders()",
          "isAuthorizedSender(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "s_authorizedSenders",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)12540_storage",
              "contract": "AuthorizedReceiver",
              "src": "@chainlink/contracts/src/v0.8/dev/AuthorizedReceiver.sol:16"
            },
            {
              "label": "s_authorizedSendersList",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AuthorizedReceiver",
              "src": "@chainlink/contracts/src/v0.8/dev/AuthorizedReceiver.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)12540_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)12225_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)12225_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/dev/functions/AuthorizedOriginReceiver.sol:AuthorizedOriginReceiver": {
        "src": "@chainlink/contracts/src/v0.8/dev/functions/AuthorizedOriginReceiver.sol:11",
        "inherit": [],
        "libraries": [
          "@chainlink/contracts/src/v0.8/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "authorizedReceiverActive()",
          "activateAuthorizedReceiver()",
          "deactivateAuthorizedReceiver()",
          "addAuthorizedSenders(address[])",
          "removeAuthorizedSenders(address[])",
          "getAuthorizedSenders()",
          "isAuthorizedSender(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AuthorizedOriginReceiver",
            "src": "@chainlink/contracts/src/v0.8/dev/functions/AuthorizedOriginReceiver.sol:30"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_active",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "AuthorizedOriginReceiver",
              "src": "@chainlink/contracts/src/v0.8/dev/functions/AuthorizedOriginReceiver.sol:23"
            },
            {
              "label": "s_authorizedSenders",
              "offset": 0,
              "slot": "1",
              "type": "t_struct(AddressSet)7250_storage",
              "contract": "AuthorizedOriginReceiver",
              "src": "@chainlink/contracts/src/v0.8/dev/functions/AuthorizedOriginReceiver.sol:24"
            },
            {
              "label": "s_authorizedSendersList",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AuthorizedOriginReceiver",
              "src": "@chainlink/contracts/src/v0.8/dev/functions/AuthorizedOriginReceiver.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)7250_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)6935_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)6935_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/dev/functions/Functions.sol:Functions": {
        "src": "@chainlink/contracts/src/v0.8/dev/functions/Functions.sol:10",
        "version": {
          "withMetadata": "66a42fe87969aa2cd5ff84ceb8e4d584cd973ddf4f631412f76644790bf191fd",
          "withoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6",
          "linkedWithoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6"
        },
        "inherit": [],
        "libraries": [
          "@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol:CBORChainlink",
          "@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol:BufferChainlink"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/dev/functions/FunctionsBillingRegistry.sol:FunctionsBillingRegistry": {
        "src": "@chainlink/contracts/src/v0.8/dev/functions/FunctionsBillingRegistry.sol:17",
        "version": {
          "withMetadata": "524b1f4e9fac2e23a380a38525b97b96a0fc788c89806e693660b021cdc12617",
          "withoutMetadata": "85821c00b05ff0ebfe8e023f54e1464806f2c7a4efacee50b6bc15c5e51520f6",
          "linkedWithoutMetadata": "85821c00b05ff0ebfe8e023f54e1464806f2c7a4efacee50b6bc15c5e51520f6"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/dev/AuthorizedReceiver.sol:AuthorizedReceiver",
          "@chainlink/contracts/src/v0.8/dev/interfaces/AuthorizedReceiverInterface.sol:AuthorizedReceiverInterface",
          "@chainlink/contracts/src/v0.8/interfaces/ERC677ReceiverInterface.sol:ERC677ReceiverInterface",
          "@chainlink/contracts/src/v0.8/dev/interfaces/FunctionsBillingRegistryInterface.sol:FunctionsBillingRegistryInterface",
          "@chainlink/contracts/src/v0.8/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/security/Pausable.sol:Pausable",
          "@chainlink/contracts/src/v0.8/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/Context.sol:Context",
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [
          "@chainlink/contracts/src/v0.8/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/SafeCast.sol:SafeCast"
        ],
        "methods": [
          "(address,address,address)",
          "setConfig(uint32,uint32,uint256,int256,uint32,uint32)",
          "getConfig()",
          "pause()",
          "unpause()",
          "getTotalBalance()",
          "ownerCancelSubscription(uint64)",
          "recoverFunds(address)",
          "getRequestConfig()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint32,uint256,uint96,uint96)",
          "startBilling(bytes,(uint64,address,uint32,uint256))",
          "fulfillAndBill(bytes32,bytes,bytes,address,address[31],uint8,uint256,uint256)",
          "oracleWithdraw(address,uint96)",
          "onTokenTransfer(address,uint256,bytes)",
          "getCurrentsubscriptionId()",
          "getSubscription(uint64)",
          "createSubscription()",
          "getSubscriptionOwner(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "removeConsumer(uint64,address)",
          "addConsumer(uint64,address)",
          "cancelSubscription(uint64,address)",
          "pendingRequestExists(uint64)",
          "timeoutRequests(bytes32[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsBillingRegistry",
            "src": "@chainlink/contracts/src/v0.8/dev/functions/FunctionsBillingRegistry.sol:148"
          },
          {
            "kind": "state-variable-immutable",
            "name": "LINK",
            "src": "@chainlink/contracts/src/v0.8/dev/functions/FunctionsBillingRegistry.sol:24"
          },
          {
            "kind": "state-variable-immutable",
            "name": "LINK_ETH_FEED",
            "src": "@chainlink/contracts/src/v0.8/dev/functions/FunctionsBillingRegistry.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "ORACLE_WITH_ALLOWLIST",
            "src": "@chainlink/contracts/src/v0.8/dev/functions/FunctionsBillingRegistry.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@chainlink/contracts/src/v0.8/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/security/Pausable.sol:28"
            },
            {
              "label": "s_authorizedSenders",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(AddressSet)12540_storage",
              "contract": "AuthorizedReceiver",
              "src": "@chainlink/contracts/src/v0.8/dev/AuthorizedReceiver.sol:16"
            },
            {
              "label": "s_authorizedSendersList",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AuthorizedReceiver",
              "src": "@chainlink/contracts/src/v0.8/dev/AuthorizedReceiver.sol:17"
            },
            {
              "label": "s_consumers",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_uint64,t_uint64))",
              "contract": "FunctionsBillingRegistry",
              "src": "@chainlink/contracts/src/v0.8/dev/functions/FunctionsBillingRegistry.sol:63"
            },
            {
              "label": "s_subscriptionConfigs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint64,t_struct(SubscriptionConfig)1115_storage)",
              "contract": "FunctionsBillingRegistry",
              "src": "@chainlink/contracts/src/v0.8/dev/functions/FunctionsBillingRegistry.sol:65"
            },
            {
              "label": "s_subscriptions",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint64,t_struct(Subscription)1107_storage)",
              "contract": "FunctionsBillingRegistry",
              "src": "@chainlink/contracts/src/v0.8/dev/functions/FunctionsBillingRegistry.sol:67"
            },
            {
              "label": "s_currentsubscriptionId",
              "offset": 0,
              "slot": "8",
              "type": "t_uint64",
              "contract": "FunctionsBillingRegistry",
              "src": "@chainlink/contracts/src/v0.8/dev/functions/FunctionsBillingRegistry.sol:71"
            },
            {
              "label": "s_totalBalance",
              "offset": 8,
              "slot": "8",
              "type": "t_uint96",
              "contract": "FunctionsBillingRegistry",
              "src": "@chainlink/contracts/src/v0.8/dev/functions/FunctionsBillingRegistry.sol:76"
            },
            {
              "label": "s_withdrawableTokens",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint96)",
              "contract": "FunctionsBillingRegistry",
              "src": "@chainlink/contracts/src/v0.8/dev/functions/FunctionsBillingRegistry.sol:91"
            },
            {
              "label": "s_requestCommitments",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_bytes32,t_struct(Commitment)1224_storage)",
              "contract": "FunctionsBillingRegistry",
              "src": "@chainlink/contracts/src/v0.8/dev/functions/FunctionsBillingRegistry.sol:104"
            },
            {
              "label": "s_fallbackWeiPerUnitLink",
              "offset": 0,
              "slot": "11",
              "type": "t_int256",
              "contract": "FunctionsBillingRegistry",
              "src": "@chainlink/contracts/src/v0.8/dev/functions/FunctionsBillingRegistry.sol:138"
            },
            {
              "label": "s_config",
              "offset": 0,
              "slot": "12",
              "type": "t_struct(Config)1274_storage",
              "contract": "FunctionsBillingRegistry",
              "src": "@chainlink/contracts/src/v0.8/dev/functions/FunctionsBillingRegistry.sol:139"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint64,t_uint64))": {
              "label": "mapping(address => mapping(uint64 => uint64))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint96)": {
              "label": "mapping(address => uint96)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Commitment)1224_storage)": {
              "label": "mapping(bytes32 => struct FunctionsBillingRegistry.Commitment)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_struct(Subscription)1107_storage)": {
              "label": "mapping(uint64 => struct FunctionsBillingRegistry.Subscription)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_struct(SubscriptionConfig)1115_storage)": {
              "label": "mapping(uint64 => struct FunctionsBillingRegistry.SubscriptionConfig)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_uint64)": {
              "label": "mapping(uint64 => uint64)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)12540_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)12225_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Commitment)1224_storage": {
              "label": "struct FunctionsBillingRegistry.Commitment",
              "members": [
                {
                  "label": "subscriptionId",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "client",
                  "type": "t_address",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "gasLimit",
                  "type": "t_uint32",
                  "offset": 28,
                  "slot": "0"
                },
                {
                  "label": "gasPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "don",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "donFee",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "registryFee",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "estimatedCost",
                  "type": "t_uint96",
                  "offset": 12,
                  "slot": "3"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Config)1274_storage": {
              "label": "struct FunctionsBillingRegistry.Config",
              "members": [
                {
                  "label": "maxGasLimit",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "reentrancyLock",
                  "type": "t_bool",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "stalenessSeconds",
                  "type": "t_uint32",
                  "offset": 5,
                  "slot": "0"
                },
                {
                  "label": "gasAfterPaymentCalculation",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "gasOverhead",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "requestTimeoutSeconds",
                  "type": "t_uint32",
                  "offset": 4,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)12225_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Subscription)1107_storage": {
              "label": "struct FunctionsBillingRegistry.Subscription",
              "members": [
                {
                  "label": "balance",
                  "type": "t_uint96",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "blockedBalance",
                  "type": "t_uint96",
                  "offset": 12,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(SubscriptionConfig)1115_storage": {
              "label": "struct FunctionsBillingRegistry.SubscriptionConfig",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "requestedOwner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "consumers",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/dev/functions/FunctionsOracle.sol:FunctionsOracle": {
        "src": "@chainlink/contracts/src/v0.8/dev/functions/FunctionsOracle.sol:13",
        "version": {
          "withMetadata": "f21b30ad07432098e1691d53a4e1177aa1c42edf663de02b56ce32e05c73eaf3",
          "withoutMetadata": "55be2f25ba69952e4bc8ef23afe0373962c51374b770ca7a1f9d5ba067bc30c0",
          "linkedWithoutMetadata": "55be2f25ba69952e4bc8ef23afe0373962c51374b770ca7a1f9d5ba067bc30c0"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/dev/functions/AuthorizedOriginReceiver.sol:AuthorizedOriginReceiver",
          "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Base.sol:OCR2Base",
          "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Abstract.sol:OCR2Abstract",
          "@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol:TypeAndVersionInterface",
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "@chainlink/contracts/src/v0.8/dev/interfaces/FunctionsOracleInterface.sol:FunctionsOracleInterface"
        ],
        "libraries": [],
        "methods": [
          "()",
          "typeAndVersion()",
          "getRegistry()",
          "setRegistry(address)",
          "getDONPublicKey()",
          "setDONPublicKey(bytes)",
          "setNodePublicKey(address,bytes)",
          "deleteNodePublicKey(address)",
          "getAllNodePublicKeys()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint64,bytes,uint32,uint256)",
          "sendRequest(uint64,bytes,uint32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FunctionsOracle",
            "src": "@chainlink/contracts/src/v0.8/dev/functions/FunctionsOracle.sol:37"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "s_configInfo",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(ConfigInfo)4394_storage",
              "contract": "OCR2Base",
              "src": "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Base.sol:36"
            },
            {
              "label": "s_configCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint32",
              "contract": "OCR2Base",
              "src": "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Base.sol:40"
            },
            {
              "label": "s_latestConfigBlockNumber",
              "offset": 4,
              "slot": "4",
              "type": "t_uint32",
              "contract": "OCR2Base",
              "src": "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Base.sol:41"
            },
            {
              "label": "s_oracles",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Oracle)4411_storage)",
              "contract": "OCR2Base",
              "src": "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Base.sol:63"
            },
            {
              "label": "s_signers",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OCR2Base",
              "src": "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Base.sol:67"
            },
            {
              "label": "s_transmitters",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OCR2Base",
              "src": "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Base.sol:71"
            },
            {
              "label": "_active",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "AuthorizedOriginReceiver",
              "src": "@chainlink/contracts/src/v0.8/dev/functions/AuthorizedOriginReceiver.sol:23"
            },
            {
              "label": "s_authorizedSenders",
              "offset": 0,
              "slot": "9",
              "type": "t_struct(AddressSet)7250_storage",
              "contract": "AuthorizedOriginReceiver",
              "src": "@chainlink/contracts/src/v0.8/dev/functions/AuthorizedOriginReceiver.sol:24"
            },
            {
              "label": "s_authorizedSendersList",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "AuthorizedOriginReceiver",
              "src": "@chainlink/contracts/src/v0.8/dev/functions/AuthorizedOriginReceiver.sol:25"
            },
            {
              "label": "s_donPublicKey",
              "offset": 0,
              "slot": "12",
              "type": "t_bytes_storage",
              "contract": "FunctionsOracle",
              "src": "@chainlink/contracts/src/v0.8/dev/functions/FunctionsOracle.sol:33"
            },
            {
              "label": "s_registry",
              "offset": 0,
              "slot": "13",
              "type": "t_contract(FunctionsBillingRegistryInterface)4065",
              "contract": "FunctionsOracle",
              "src": "@chainlink/contracts/src/v0.8/dev/functions/FunctionsOracle.sol:34"
            },
            {
              "label": "s_nodePublicKeys",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_bytes_storage)",
              "contract": "FunctionsOracle",
              "src": "@chainlink/contracts/src/v0.8/dev/functions/FunctionsOracle.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsBillingRegistryInterface)4065": {
              "label": "contract FunctionsBillingRegistryInterface",
              "numberOfBytes": "20"
            },
            "t_enum(Role)4405": {
              "label": "enum OCR2Base.Role",
              "members": [
                "Unset",
                "Signer",
                "Transmitter"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bytes_storage)": {
              "label": "mapping(address => bytes)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Oracle)4411_storage)": {
              "label": "mapping(address => struct OCR2Base.Oracle)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)7250_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)6935_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ConfigInfo)4394_storage": {
              "label": "struct OCR2Base.ConfigInfo",
              "members": [
                {
                  "label": "latestConfigDigest",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "f",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "n",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Oracle)4411_storage": {
              "label": "struct OCR2Base.Oracle",
              "members": [
                {
                  "label": "index",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "role",
                  "type": "t_enum(Role)4405",
                  "offset": 1,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Set)6935_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/dev/functions/FunctionsOracleFactory.sol:FunctionsOracleFactory": {
        "src": "@chainlink/contracts/src/v0.8/dev/functions/FunctionsOracleFactory.sol:12",
        "version": {
          "withMetadata": "538d7eddaf9f595de50f97f8e8af7df326724621f51678444e0a6a7deb6b09f5",
          "withoutMetadata": "7d51783ee34fb1536991631c0634688f132e58565f4e8ae2187ea6dabb7a6e42",
          "linkedWithoutMetadata": "7d51783ee34fb1536991631c0634688f132e58565f4e8ae2187ea6dabb7a6e42"
        },
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol:TypeAndVersionInterface"
        ],
        "libraries": [
          "@chainlink/contracts/src/v0.8/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "typeAndVersion()",
          "deployNewOracle()",
          "created(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "s_created",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(AddressSet)7250_storage",
              "contract": "FunctionsOracleFactory",
              "src": "@chainlink/contracts/src/v0.8/dev/functions/FunctionsOracleFactory.sol:15"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)7250_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)6935_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)6935_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/dev/interfaces/AuthorizedOriginReceiverInterface.sol:AuthorizedOriginReceiverInterface": {
        "src": "@chainlink/contracts/src/v0.8/dev/interfaces/AuthorizedOriginReceiverInterface.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "authorizedReceiverActive()",
          "activateAuthorizedReceiver()",
          "deactivateAuthorizedReceiver()",
          "addAuthorizedSenders(address[])",
          "removeAuthorizedSenders(address[])",
          "getAuthorizedSenders()",
          "isAuthorizedSender(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/dev/interfaces/AuthorizedReceiverInterface.sol:AuthorizedReceiverInterface": {
        "src": "@chainlink/contracts/src/v0.8/dev/interfaces/AuthorizedReceiverInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isAuthorizedSender(address)",
          "getAuthorizedSenders()",
          "setAuthorizedSenders(address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/dev/interfaces/FunctionsBillingRegistryInterface.sol:FunctionsBillingRegistryInterface": {
        "src": "@chainlink/contracts/src/v0.8/dev/interfaces/FunctionsBillingRegistryInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint32,uint256,uint96,uint96)",
          "startBilling(bytes,(uint64,address,uint32,uint256))",
          "fulfillAndBill(bytes32,bytes,bytes,address,address[31],uint8,uint256,uint256)",
          "getSubscriptionOwner(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface": {
        "src": "@chainlink/contracts/src/v0.8/dev/interfaces/FunctionsClientInterface.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDONPublicKey()",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/dev/interfaces/FunctionsOracleInterface.sol:FunctionsOracleInterface": {
        "src": "@chainlink/contracts/src/v0.8/dev/interfaces/FunctionsOracleInterface.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRegistry()",
          "setRegistry(address)",
          "getDONPublicKey()",
          "setDONPublicKey(bytes)",
          "setNodePublicKey(address,bytes)",
          "deleteNodePublicKey(address)",
          "getAllNodePublicKeys()",
          "getRequiredFee(bytes,(uint64,address,uint32,uint256))",
          "estimateCost(uint64,bytes,uint32,uint256)",
          "sendRequest(uint64,bytes,uint32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Abstract.sol:OCR2Abstract": {
        "src": "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Abstract.sol:6",
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol:TypeAndVersionInterface"
        ],
        "libraries": [],
        "methods": [
          "setConfig(address[],address[],uint8,bytes,uint64,bytes)",
          "latestConfigDetails()",
          "latestConfigDigestAndEpoch()",
          "transmit(bytes32[3],bytes,bytes32[],bytes32[],bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Base.sol:OCR2Base": {
        "src": "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Base.sol:17",
        "inherit": [
          "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Abstract.sol:OCR2Abstract",
          "@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol:TypeAndVersionInterface",
          "@chainlink/contracts/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "latestConfigDigestAndEpoch()",
          "setConfig(address[],address[],uint8,bytes,uint64,bytes)",
          "latestConfigDetails()",
          "transmitters()",
          "transmit(bytes32[3],bytes,bytes32[],bytes32[],bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OCR2Base",
            "src": "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Base.sol:22"
          },
          {
            "kind": "state-variable-immutable",
            "name": "i_uniqueReports",
            "src": "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Base.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "s_configInfo",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(ConfigInfo)4394_storage",
              "contract": "OCR2Base",
              "src": "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Base.sol:36"
            },
            {
              "label": "s_configCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint32",
              "contract": "OCR2Base",
              "src": "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Base.sol:40"
            },
            {
              "label": "s_latestConfigBlockNumber",
              "offset": 4,
              "slot": "4",
              "type": "t_uint32",
              "contract": "OCR2Base",
              "src": "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Base.sol:41"
            },
            {
              "label": "s_oracles",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Oracle)4411_storage)",
              "contract": "OCR2Base",
              "src": "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Base.sol:63"
            },
            {
              "label": "s_signers",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OCR2Base",
              "src": "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Base.sol:67"
            },
            {
              "label": "s_transmitters",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_address)dyn_storage",
              "contract": "OCR2Base",
              "src": "@chainlink/contracts/src/v0.8/dev/ocr2/OCR2Base.sol:71"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_enum(Role)4405": {
              "label": "enum OCR2Base.Role",
              "members": [
                "Unset",
                "Signer",
                "Transmitter"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(Oracle)4411_storage)": {
              "label": "mapping(address => struct OCR2Base.Oracle)",
              "numberOfBytes": "32"
            },
            "t_struct(ConfigInfo)4394_storage": {
              "label": "struct OCR2Base.ConfigInfo",
              "members": [
                {
                  "label": "latestConfigDigest",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "f",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "n",
                  "type": "t_uint8",
                  "offset": 1,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Oracle)4411_storage": {
              "label": "struct OCR2Base.Oracle",
              "members": [
                {
                  "label": "index",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "role",
                  "type": "t_enum(Role)4405",
                  "offset": 1,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/security/Pausable.sol:Pausable": {
        "src": "@chainlink/contracts/src/v0.8/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/security/Pausable.sol:17",
        "inherit": [
          "@chainlink/contracts/src/v0.8/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "@chainlink/contracts/src/v0.8/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/security/Pausable.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@chainlink/contracts/src/v0.8/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/security/Pausable.sol:28"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/Context.sol:Context": {
        "src": "@chainlink/contracts/src/v0.8/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/SafeCast.sol:SafeCast": {
        "src": "@chainlink/contracts/src/v0.8/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/SafeCast.sol:22",
        "version": {
          "withMetadata": "f8d40ace748f23136bfbba3a1a897fe25b51b389f0dd6bdc1e46ba0478d7931c",
          "withoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6",
          "linkedWithoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@chainlink/contracts/src/v0.8/dev/vendor/openzeppelin-solidity/v.4.8.0/contracts/utils/structs/EnumerableSet.sol:41",
        "version": {
          "withMetadata": "16e2ff68faf65aec00e90c8d4031cd7674fbb0dbd3e25061e81cfa0da966c556",
          "withoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6",
          "linkedWithoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol:AutomationCompatibleInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkUpkeep(bytes)",
          "performUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/interfaces/ERC677ReceiverInterface.sol:ERC677ReceiverInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/ERC677ReceiverInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onTokenTransfer(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OwnableInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol:TypeAndVersionInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "typeAndVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol:BufferChainlink": {
        "src": "@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol:12",
        "version": {
          "withMetadata": "b8e04f117fb584cea4763ed0e968b2c522c6a7560c15c33cd3f6dd4c504e5a17",
          "withoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6",
          "linkedWithoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol:CBORChainlink": {
        "src": "@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol:6",
        "version": {
          "withMetadata": "f0d9899902045d70795d13a25b544b27c16ae95882fb35af22e8554da0b97766",
          "withoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6",
          "linkedWithoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6"
        },
        "inherit": [],
        "libraries": [
          "@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol:BufferChainlink"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:23",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            }
          ],
          "types": {
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:IERC20PermitUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20PermitUpgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:19",
        "version": {
          "withMetadata": "ebf698424497e89e7d74e4dd2bfa0629782c66ff52f685214035c5286c1c8027",
          "withoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6",
          "linkedWithoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "003d1400a5a043e463597199aba79bb8c1f7be49fa80d57fe4eddb49ce1b27d1",
          "withoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6",
          "linkedWithoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:12",
        "version": {
          "withMetadata": "46d536d5fc29e3a5caa614a64eaa83a51221d5aad0be8c855e866e6611c2c335",
          "withoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6",
          "linkedWithoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol:SignedMathUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:9",
        "version": {
          "withMetadata": "80fbd4045f8fd9a2b139b54e54fbcae2982fa3478ad57c587a5abfd3c4400563",
          "withoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6",
          "linkedWithoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol:SignedMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol:9",
        "version": {
          "withMetadata": "f4f88e7e8ddad265fd0fb54ddd61680efe01b28fe371a6ebb0c384315ad438ce",
          "withoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6",
          "linkedWithoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:18",
        "version": {
          "withMetadata": "9a34e807aa343eeae4c074c92be27c9e346928d5b3bb554f0de2d57285029559",
          "withoutMetadata": "9ec32c4ca73a4a06bfba3213ec677e0f60a07a4b68465fcb68bc32c1543dcc09",
          "linkedWithoutMetadata": "9ec32c4ca73a4a06bfba3213ec677e0f60a07a4b68465fcb68bc32c1543dcc09"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:30"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f83506c85c44947e8b9c46eac1463dc60837b4689056cf40db8a5bb36d53b48a",
          "withoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6",
          "linkedWithoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "a421c57da709879e784c8b046997a047ceb16d7a381148cf6882c4d6b9bfffd8",
          "withoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6",
          "linkedWithoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "80195b1481ad6c7c58cd4f94082d5d5891c324a0c87e5647a073ed3162f6695c",
          "withoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6",
          "linkedWithoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:41",
        "version": {
          "withMetadata": "af7e64c0baa638e70eb8c27fd29981ce841d64319ff47c739ddbb0f04a7a9a92",
          "withoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6",
          "linkedWithoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol:IUniswapV3Factory": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "feeAmountTickSpacing(uint24)",
          "getPool(address,address,uint24)",
          "createPool(address,address,uint24)",
          "setOwner(address)",
          "enableFeeAmount(uint24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback": {
        "src": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:ISwapRouter": {
        "src": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol:9",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [],
        "methods": [
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactInput((bytes,address,uint256,uint256,uint256))",
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))",
          "exactOutput((bytes,address,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "lib/ssv-network/contracts/interfaces/ISSVClusters.sol:ISSVClusters": {
        "src": "lib/ssv-network/contracts/interfaces/ISSVClusters.sol:6",
        "inherit": [
          "lib/ssv-network/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "registerValidator(bytes,uint64[],bytes,uint256,(uint32,uint64,uint64,bool,uint256))",
          "removeValidator(bytes,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "liquidate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "reactivate(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "deposit(address,uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "withdraw(uint64[],uint256,(uint32,uint64,uint64,bool,uint256))",
          "exitValidator(bytes,uint64[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "lib/ssv-network/contracts/interfaces/ISSVDAO.sol:ISSVDAO": {
        "src": "lib/ssv-network/contracts/interfaces/ISSVDAO.sol:6",
        "inherit": [
          "lib/ssv-network/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "updateNetworkFee(uint256)",
          "withdrawNetworkEarnings(uint256)",
          "updateOperatorFeeIncreaseLimit(uint64)",
          "updateDeclareOperatorFeePeriod(uint64)",
          "updateExecuteOperatorFeePeriod(uint64)",
          "updateLiquidationThresholdPeriod(uint64)",
          "updateMinimumLiquidationCollateral(uint256)",
          "updateMaximumOperatorFee(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "lib/ssv-network/contracts/interfaces/ISSVNetwork.sol:ISSVNetwork": {
        "src": "lib/ssv-network/contracts/interfaces/ISSVNetwork.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address,uint64,uint256,uint32,uint64,uint64,uint64)",
          "getVersion()",
          "setFeeRecipientAddress(address)",
          "updateModule(uint8,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "lib/ssv-network/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore": {
        "src": "lib/ssv-network/contracts/interfaces/ISSVNetworkCore.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "lib/ssv-network/contracts/interfaces/ISSVOperators.sol:ISSVOperators": {
        "src": "lib/ssv-network/contracts/interfaces/ISSVOperators.sol:6",
        "inherit": [
          "lib/ssv-network/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "registerOperator(bytes,uint256)",
          "removeOperator(uint64)",
          "setOperatorWhitelist(uint64,address)",
          "declareOperatorFee(uint64,uint256)",
          "executeOperatorFee(uint64)",
          "cancelDeclaredOperatorFee(uint64)",
          "reduceOperatorFee(uint64,uint256)",
          "withdrawOperatorEarnings(uint64,uint256)",
          "withdrawAllOperatorEarnings(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "lib/ssv-network/contracts/interfaces/ISSVViews.sol:ISSVViews": {
        "src": "lib/ssv-network/contracts/interfaces/ISSVViews.sol:6",
        "inherit": [
          "lib/ssv-network/contracts/interfaces/ISSVNetworkCore.sol:ISSVNetworkCore"
        ],
        "libraries": [],
        "methods": [
          "getValidator(address,bytes)",
          "getOperatorFee(uint64)",
          "getOperatorDeclaredFee(uint64)",
          "getOperatorById(uint64)",
          "isLiquidatable(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "isLiquidated(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getBurnRate(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getOperatorEarnings(uint64)",
          "getBalance(address,uint64[],(uint32,uint64,uint64,bool,uint256))",
          "getNetworkFee()",
          "getNetworkEarnings()",
          "getOperatorFeeIncreaseLimit()",
          "getMaximumOperatorFee()",
          "getOperatorFeePeriods()",
          "getLiquidationThresholdPeriod()",
          "getMinimumLiquidationCollateral()",
          "getValidatorsPerOperatorLimit()",
          "getVersion()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "lib/ssv-network/contracts/libraries/SSVStorage.sol:SSVStorage": {
        "src": "lib/ssv-network/contracts/libraries/SSVStorage.sol:38",
        "version": {
          "withMetadata": "21bf4957091fefd9ffb0058106d1de236f24a5a713e0f946a0e6c9449a8dd383",
          "withoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6",
          "linkedWithoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/CasimirCore.sol:CasimirCore": {
        "src": "src/v1/CasimirCore.sol:7",
        "inherit": [
          "src/v1/interfaces/ICasimirCore.sol:ICasimirCore"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/CasimirFactory.sol:CasimirFactory": {
        "src": "src/v1/CasimirFactory.sol:15",
        "version": {
          "withMetadata": "6494138a845efa679c58523ef53b12a28075f1c7f5ad5feaaf01dee02c78f1fc",
          "withoutMetadata": "6d743fee9f967de003ae1dc2a6e90cb4a9031d9c11b7f5955dce3f7a375a82eb",
          "linkedWithoutMetadata": "6d743fee9f967de003ae1dc2a6e90cb4a9031d9c11b7f5955dce3f7a375a82eb"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "src/v1/CasimirCore.sol:CasimirCore",
          "src/v1/interfaces/ICasimirFactory.sol:ICasimirFactory",
          "src/v1/interfaces/ICasimirCore.sol:ICasimirCore"
        ],
        "libraries": [
          "src/v1/libraries/CasimirBeacon.sol:CasimirBeacon"
        ],
        "methods": [
          "(address,address,address,address,address)",
          "initialize()",
          "deployManager(address,address,(uint256,uint256,uint32,bool,bool,bool,bool,bool))",
          "getManagerConfig(uint32)",
          "getManagerIds()",
          "getOwner()"
        ],
        "linkReferences": [
          {
            "src": "src/v1/libraries/CasimirBeacon.sol",
            "name": "CasimirBeacon",
            "length": 20,
            "start": 4224,
            "placeholder": "__$9b59661500862860ed33a22dd071583f74$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "CasimirBeacon",
            "src": "src/v1/libraries/CasimirBeacon.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "managerAddresses",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_uint32,t_address)",
              "contract": "CasimirFactory",
              "src": "src/v1/CasimirFactory.sol:42"
            },
            {
              "label": "viewsAddresses",
              "offset": 0,
              "slot": "152",
              "type": "t_mapping(t_uint32,t_address)",
              "contract": "CasimirFactory",
              "src": "src/v1/CasimirFactory.sol:44"
            },
            {
              "label": "lastManagerId",
              "offset": 0,
              "slot": "153",
              "type": "t_uint32",
              "contract": "CasimirFactory",
              "src": "src/v1/CasimirFactory.sol:46"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "154",
              "type": "t_array(t_uint256)50_storage",
              "contract": "CasimirFactory",
              "src": "src/v1/CasimirFactory.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_address)": {
              "label": "mapping(uint32 => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/CasimirManager.sol:CasimirManager": {
        "src": "src/v1/CasimirManager.sol:30",
        "version": {
          "withMetadata": "23427db2c0af5694b1c9166d4c02cc2bb34dd1fd2a51c0b8ab30b80d95c0acdd",
          "withoutMetadata": "ea34872ef9078ee43930874aa040eefbe7ef0cb17c6948b19b623e1165572051",
          "linkedWithoutMetadata": "ea34872ef9078ee43930874aa040eefbe7ef0cb17c6948b19b623e1165572051"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "src/v1/CasimirCore.sol:CasimirCore",
          "src/v1/interfaces/ICasimirManager.sol:ICasimirManager",
          "src/v1/interfaces/ICasimirCore.sol:ICasimirCore"
        ],
        "libraries": [
          "src/v1/libraries/CasimirArray.sol:CasimirArray",
          "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable",
          "src/v1/libraries/CasimirBeacon.sol:CasimirBeacon",
          "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable"
        ],
        "methods": [
          "(address,address,address,address,address,address,address,address,address)",
          "initialize(address,address,(uint256,uint256,uint32,bool,bool,bool,bool,bool))",
          "()",
          "depositStake()",
          "depositRewards(uint32)",
          "depositExitedBalance(uint32)",
          "depositRecoveredBalance(uint32)",
          "depositClusterBalance(uint64[],(uint32,uint64,uint64,bool,uint256),uint256,uint256,bool)",
          "depositFunctionsBalance(uint256,uint256,bool)",
          "depositUpkeepBalance(uint256,uint256,bool)",
          "depositReservedFees()",
          "withdrawReservedFees(uint256)",
          "rebalanceStake(uint256,uint256,uint256,uint256)",
          "compoundRewards(uint32[5])",
          "requestWithdrawal(uint256)",
          "fulfillWithdrawals(uint256)",
          "initiatePool(bytes32,bytes,bytes,bytes,uint64[],bytes)",
          "activatePool(uint256,(uint32,uint64,uint64,bool,uint256),uint256,uint256,bool)",
          "resharePool(uint32,uint64[],uint64,uint64,bytes,(uint32,uint64,uint64,bool,uint256),(uint32,uint64,uint64,bool,uint256),uint256,uint256,bool)",
          "reportForcedExits(uint32[])",
          "reportCompletedExit(uint256,uint32[],(uint32,uint64,uint64,bool,uint256))",
          "withdrawClusterBalance(uint64[],(uint32,uint64,uint64,bool,uint256),uint256)",
          "cancelFunctions()",
          "cancelUpkeep()",
          "withdrawLINKBalance(uint256)",
          "withdrawSSVBalance(uint256)",
          "getPendingWithdrawalEligibility(uint256,uint256)",
          "getPendingPoolIds()",
          "getStakedPoolIds()",
          "getPoolAddress(uint32)",
          "getRegistryAddress()",
          "getUpkeepAddress()",
          "getUserStake(address)",
          "getTotalStake()",
          "getBufferedBalance()",
          "getWithdrawableBalance()"
        ],
        "linkReferences": [
          {
            "src": "src/v1/libraries/CasimirBeacon.sol",
            "name": "CasimirBeacon",
            "length": 20,
            "start": 7238,
            "placeholder": "__$9b59661500862860ed33a22dd071583f74$__"
          },
          {
            "src": "src/v1/libraries/CasimirBeacon.sol",
            "name": "CasimirBeacon",
            "length": 20,
            "start": 15460,
            "placeholder": "__$9b59661500862860ed33a22dd071583f74$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "CasimirBeacon",
            "src": "src/v1/libraries/CasimirBeacon.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "lockPeriod",
              "offset": 0,
              "slot": "151",
              "type": "t_uint256",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:36"
            },
            {
              "label": "userFee",
              "offset": 0,
              "slot": "152",
              "type": "t_uint32",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:38"
            },
            {
              "label": "eigenStake",
              "offset": 4,
              "slot": "152",
              "type": "t_bool",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:40"
            },
            {
              "label": "liquidStake",
              "offset": 5,
              "slot": "152",
              "type": "t_bool",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:42"
            },
            {
              "label": "reportPeriod",
              "offset": 6,
              "slot": "152",
              "type": "t_uint32",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:44"
            },
            {
              "label": "functionsId",
              "offset": 10,
              "slot": "152",
              "type": "t_uint64",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:46"
            },
            {
              "label": "upkeepId",
              "offset": 0,
              "slot": "153",
              "type": "t_uint256",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:48"
            },
            {
              "label": "latestBeaconBalance",
              "offset": 0,
              "slot": "154",
              "type": "t_uint256",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:50"
            },
            {
              "label": "finalizableActivations",
              "offset": 0,
              "slot": "155",
              "type": "t_uint256",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:52"
            },
            {
              "label": "finalizableCompletedExits",
              "offset": 0,
              "slot": "156",
              "type": "t_uint256",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:54"
            },
            {
              "label": "requestedWithdrawalBalance",
              "offset": 0,
              "slot": "157",
              "type": "t_uint256",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:56"
            },
            {
              "label": "reservedFeeBalance",
              "offset": 0,
              "slot": "158",
              "type": "t_uint256",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:58"
            },
            {
              "label": "requestedExits",
              "offset": 0,
              "slot": "159",
              "type": "t_uint256",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:60"
            },
            {
              "label": "daoOracleAddress",
              "offset": 0,
              "slot": "160",
              "type": "t_address",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:115"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "161",
              "type": "t_contract(ICasimirFactory)26854",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:117"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "162",
              "type": "t_contract(ICasimirRegistry)27572",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:119"
            },
            {
              "label": "upkeep",
              "offset": 0,
              "slot": "163",
              "type": "t_contract(ICasimirUpkeep)27670",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:121"
            },
            {
              "label": "lastPoolId",
              "offset": 20,
              "slot": "163",
              "type": "t_uint32",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:123"
            },
            {
              "label": "latestBeaconBalanceAfterFees",
              "offset": 0,
              "slot": "164",
              "type": "t_uint256",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:125"
            },
            {
              "label": "latestActiveRewardBalance",
              "offset": 0,
              "slot": "165",
              "type": "t_int256",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:127"
            },
            {
              "label": "finalizableExitedBalance",
              "offset": 0,
              "slot": "166",
              "type": "t_uint256",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:129"
            },
            {
              "label": "finalizableRecoveredBalance",
              "offset": 0,
              "slot": "167",
              "type": "t_uint256",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:131"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "168",
              "type": "t_mapping(t_address,t_struct(User)26729_storage)",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:133"
            },
            {
              "label": "stakeRatioSum",
              "offset": 0,
              "slot": "169",
              "type": "t_uint256",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:135"
            },
            {
              "label": "requestedWithdrawals",
              "offset": 0,
              "slot": "170",
              "type": "t_uint256",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:137"
            },
            {
              "label": "requestedWithdrawalQueue",
              "offset": 0,
              "slot": "171",
              "type": "t_array(t_struct(Withdrawal)26736_storage)dyn_storage",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:139"
            },
            {
              "label": "poolAddresses",
              "offset": 0,
              "slot": "172",
              "type": "t_mapping(t_uint32,t_address)",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:141"
            },
            {
              "label": "tipBalance",
              "offset": 0,
              "slot": "173",
              "type": "t_uint256",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:143"
            },
            {
              "label": "recoveredBalances",
              "offset": 0,
              "slot": "174",
              "type": "t_mapping(t_uint32,t_uint256)",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:145"
            },
            {
              "label": "prepoolBalance",
              "offset": 0,
              "slot": "175",
              "type": "t_uint256",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:147"
            },
            {
              "label": "exitedBalance",
              "offset": 0,
              "slot": "176",
              "type": "t_uint256",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:149"
            },
            {
              "label": "readyPoolIds",
              "offset": 0,
              "slot": "177",
              "type": "t_array(t_uint32)dyn_storage",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:151"
            },
            {
              "label": "pendingPoolIds",
              "offset": 0,
              "slot": "178",
              "type": "t_array(t_uint32)dyn_storage",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:153"
            },
            {
              "label": "stakedPoolIds",
              "offset": 0,
              "slot": "179",
              "type": "t_array(t_uint32)dyn_storage",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:155"
            },
            {
              "label": "forcedExits",
              "offset": 0,
              "slot": "180",
              "type": "t_uint256",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:157"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "181",
              "type": "t_array(t_uint256)50_storage",
              "contract": "CasimirManager",
              "src": "src/v1/CasimirManager.sol:159"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Withdrawal)26736_storage)dyn_storage": {
              "label": "struct ICasimirCore.Withdrawal[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint32)dyn_storage": {
              "label": "uint32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICasimirFactory)26854": {
              "label": "contract ICasimirFactory",
              "numberOfBytes": "20"
            },
            "t_contract(ICasimirRegistry)27572": {
              "label": "contract ICasimirRegistry",
              "numberOfBytes": "20"
            },
            "t_contract(ICasimirUpkeep)27670": {
              "label": "contract ICasimirUpkeep",
              "numberOfBytes": "20"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)26729_storage)": {
              "label": "mapping(address => struct ICasimirCore.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint32,t_address)": {
              "label": "mapping(uint32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(User)26729_storage": {
              "label": "struct ICasimirCore.User",
              "members": [
                {
                  "label": "stake0",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeRatioSum0",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Withdrawal)26736_storage": {
              "label": "struct ICasimirCore.Withdrawal",
              "members": [
                {
                  "label": "userAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/CasimirPool.sol:CasimirPool": {
        "src": "src/v1/CasimirPool.sol:15",
        "version": {
          "withMetadata": "9c19f57de6d434cb5a12da839f65518007782cea3cccdb152cbce76b946331af",
          "withoutMetadata": "f29a0001a334fd64f2c64fec980ea5931de1dce5c0d307d62a2029a702e3e26f",
          "linkedWithoutMetadata": "f29a0001a334fd64f2c64fec980ea5931de1dce5c0d307d62a2029a702e3e26f"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "src/v1/CasimirCore.sol:CasimirCore",
          "src/v1/interfaces/ICasimirPool.sol:ICasimirPool",
          "src/v1/interfaces/ICasimirCore.sol:ICasimirCore"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable"
        ],
        "methods": [
          "(address)",
          "initialize(address,uint64[],uint32,bytes,bytes)",
          "depositStake(bytes32,bytes,bytes)",
          "depositRewards()",
          "setOperatorIds(uint64[])",
          "setReshares(uint256)",
          "setStatus(uint8)",
          "withdrawBalance(uint32[])",
          "getOperatorIds()",
          "getRegistration()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "publicKey",
              "offset": 0,
              "slot": "151",
              "type": "t_bytes_storage",
              "contract": "CasimirPool",
              "src": "src/v1/CasimirPool.sol:17"
            },
            {
              "label": "reshares",
              "offset": 0,
              "slot": "152",
              "type": "t_uint256",
              "contract": "CasimirPool",
              "src": "src/v1/CasimirPool.sol:19"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "153",
              "type": "t_enum(PoolStatus)26707",
              "contract": "CasimirPool",
              "src": "src/v1/CasimirPool.sol:21"
            },
            {
              "label": "operatorIds",
              "offset": 0,
              "slot": "154",
              "type": "t_array(t_uint64)dyn_storage",
              "contract": "CasimirPool",
              "src": "src/v1/CasimirPool.sol:30"
            },
            {
              "label": "poolId",
              "offset": 0,
              "slot": "155",
              "type": "t_uint32",
              "contract": "CasimirPool",
              "src": "src/v1/CasimirPool.sol:32"
            },
            {
              "label": "shares",
              "offset": 0,
              "slot": "156",
              "type": "t_bytes_storage",
              "contract": "CasimirPool",
              "src": "src/v1/CasimirPool.sol:34"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "157",
              "type": "t_contract(ICasimirManager)27334",
              "contract": "CasimirPool",
              "src": "src/v1/CasimirPool.sol:36"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "158",
              "type": "t_contract(ICasimirRegistry)27572",
              "contract": "CasimirPool",
              "src": "src/v1/CasimirPool.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "159",
              "type": "t_array(t_uint256)50_storage",
              "contract": "CasimirPool",
              "src": "src/v1/CasimirPool.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint64)dyn_storage": {
              "label": "uint64[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(ICasimirManager)27334": {
              "label": "contract ICasimirManager",
              "numberOfBytes": "20"
            },
            "t_contract(ICasimirRegistry)27572": {
              "label": "contract ICasimirRegistry",
              "numberOfBytes": "20"
            },
            "t_enum(PoolStatus)26707": {
              "label": "enum ICasimirCore.PoolStatus",
              "members": [
                "READY",
                "PENDING",
                "ACTIVE",
                "EXITING_FORCED",
                "EXITING_REQUESTED",
                "WITHDRAWN"
              ],
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/CasimirRegistry.sol:CasimirRegistry": {
        "src": "src/v1/CasimirRegistry.sol:15",
        "version": {
          "withMetadata": "ea679996b2eb64eec2662f4c41be803f640c0fed65656029e2ed3c66e76ef6f5",
          "withoutMetadata": "5e6ba340ea3df76641f51ad8b7c9c046ba8cf0844eabe70c023bff887073723b",
          "linkedWithoutMetadata": "5e6ba340ea3df76641f51ad8b7c9c046ba8cf0844eabe70c023bff887073723b"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "src/v1/CasimirCore.sol:CasimirCore",
          "src/v1/interfaces/ICasimirRegistry.sol:ICasimirRegistry",
          "src/v1/interfaces/ICasimirCore.sol:ICasimirCore"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(uint256,bool,bool)",
          "registerOperator(uint64)",
          "depositCollateral(uint64)",
          "requestWithdrawal(uint64,uint256)",
          "requestDeactivation(uint64)",
          "addOperatorPool(uint64,uint32)",
          "removeOperatorPool(uint64,uint32,uint256)",
          "getOperator(uint64)",
          "getOperatorIds()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "minCollateral",
              "offset": 0,
              "slot": "151",
              "type": "t_uint256",
              "contract": "CasimirRegistry",
              "src": "src/v1/CasimirRegistry.sol:23"
            },
            {
              "label": "privateOperators",
              "offset": 0,
              "slot": "152",
              "type": "t_bool",
              "contract": "CasimirRegistry",
              "src": "src/v1/CasimirRegistry.sol:25"
            },
            {
              "label": "verifiedOperators",
              "offset": 1,
              "slot": "152",
              "type": "t_bool",
              "contract": "CasimirRegistry",
              "src": "src/v1/CasimirRegistry.sol:27"
            },
            {
              "label": "manager",
              "offset": 2,
              "slot": "152",
              "type": "t_contract(ICasimirManager)27334",
              "contract": "CasimirRegistry",
              "src": "src/v1/CasimirRegistry.sol:34"
            },
            {
              "label": "operatorIds",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint64)dyn_storage",
              "contract": "CasimirRegistry",
              "src": "src/v1/CasimirRegistry.sol:36"
            },
            {
              "label": "operators",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_uint64,t_struct(Operator)26674_storage)",
              "contract": "CasimirRegistry",
              "src": "src/v1/CasimirRegistry.sol:38"
            },
            {
              "label": "operatorPools",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_uint64,t_mapping(t_uint32,t_bool))",
              "contract": "CasimirRegistry",
              "src": "src/v1/CasimirRegistry.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "156",
              "type": "t_array(t_uint256)50_storage",
              "contract": "CasimirRegistry",
              "src": "src/v1/CasimirRegistry.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint64)dyn_storage": {
              "label": "uint64[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICasimirManager)27334": {
              "label": "contract ICasimirManager",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint32,t_bool)": {
              "label": "mapping(uint32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_uint32,t_bool))": {
              "label": "mapping(uint64 => mapping(uint32 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_struct(Operator)26674_storage)": {
              "label": "mapping(uint64 => struct ICasimirCore.Operator)",
              "numberOfBytes": "32"
            },
            "t_struct(Operator)26674_storage": {
              "label": "struct ICasimirCore.Operator",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "poolCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "resharing",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/CasimirUpkeep.sol:CasimirUpkeep": {
        "src": "src/v1/CasimirUpkeep.sol:14",
        "version": {
          "withMetadata": "8952e70f8a22bf7c1e48b6e10b069d217ab885a8c2d99fd1b1f94ebfff388de7",
          "withoutMetadata": "f45d369fde71578e69df7c3be14a9826b25d364725db1d7f617a665578bab5ef",
          "linkedWithoutMetadata": "f45d369fde71578e69df7c3be14a9826b25d364725db1d7f617a665578bab5ef"
        },
        "inherit": [
          "src/v1/vendor/FunctionsClient.sol:FunctionsClient",
          "@chainlink/contracts/src/v0.8/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface",
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "src/v1/interfaces/ICasimirUpkeep.sol:ICasimirUpkeep",
          "@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol:AutomationCompatibleInterface",
          "src/v1/interfaces/ICasimirCore.sol:ICasimirCore"
        ],
        "libraries": [
          "@chainlink/contracts/src/v0.8/dev/functions/Functions.sol:Functions",
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable"
        ],
        "methods": [
          "()",
          "initialize(address,address,bool)",
          "performUpkeep(bytes)",
          "setFunctionsOracle(address)",
          "setFunctionsRequest(string,string[],uint32)",
          "checkUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "151",
              "type": "t_contract(FunctionsOracleInterface)4175",
              "contract": "FunctionsClient",
              "src": "src/v1/vendor/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "152",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "src/v1/vendor/FunctionsClient.sol:14"
            },
            {
              "label": "compoundStake",
              "offset": 0,
              "slot": "153",
              "type": "t_bool",
              "contract": "CasimirUpkeep",
              "src": "src/v1/CasimirUpkeep.sol:24"
            },
            {
              "label": "factory",
              "offset": 1,
              "slot": "153",
              "type": "t_contract(ICasimirFactory)26854",
              "contract": "CasimirUpkeep",
              "src": "src/v1/CasimirUpkeep.sol:28"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "154",
              "type": "t_contract(ICasimirManager)27334",
              "contract": "CasimirUpkeep",
              "src": "src/v1/CasimirUpkeep.sol:30"
            },
            {
              "label": "previousReportTimestamp",
              "offset": 0,
              "slot": "155",
              "type": "t_uint256",
              "contract": "CasimirUpkeep",
              "src": "src/v1/CasimirUpkeep.sol:32"
            },
            {
              "label": "reportStatus",
              "offset": 0,
              "slot": "156",
              "type": "t_enum(ReportStatus)27588",
              "contract": "CasimirUpkeep",
              "src": "src/v1/CasimirUpkeep.sol:34"
            },
            {
              "label": "reportPeriod",
              "offset": 1,
              "slot": "156",
              "type": "t_uint32",
              "contract": "CasimirUpkeep",
              "src": "src/v1/CasimirUpkeep.sol:36"
            },
            {
              "label": "reportRemainingRequests",
              "offset": 0,
              "slot": "157",
              "type": "t_uint256",
              "contract": "CasimirUpkeep",
              "src": "src/v1/CasimirUpkeep.sol:38"
            },
            {
              "label": "reportRequestBlock",
              "offset": 0,
              "slot": "158",
              "type": "t_uint256",
              "contract": "CasimirUpkeep",
              "src": "src/v1/CasimirUpkeep.sol:40"
            },
            {
              "label": "reportTimestamp",
              "offset": 0,
              "slot": "159",
              "type": "t_uint256",
              "contract": "CasimirUpkeep",
              "src": "src/v1/CasimirUpkeep.sol:42"
            },
            {
              "label": "reportSweptBalance",
              "offset": 0,
              "slot": "160",
              "type": "t_uint256",
              "contract": "CasimirUpkeep",
              "src": "src/v1/CasimirUpkeep.sol:44"
            },
            {
              "label": "reportBeaconBalance",
              "offset": 0,
              "slot": "161",
              "type": "t_uint256",
              "contract": "CasimirUpkeep",
              "src": "src/v1/CasimirUpkeep.sol:46"
            },
            {
              "label": "reportActivatedDeposits",
              "offset": 0,
              "slot": "162",
              "type": "t_uint256",
              "contract": "CasimirUpkeep",
              "src": "src/v1/CasimirUpkeep.sol:48"
            },
            {
              "label": "reportForcedExits",
              "offset": 0,
              "slot": "163",
              "type": "t_uint256",
              "contract": "CasimirUpkeep",
              "src": "src/v1/CasimirUpkeep.sol:50"
            },
            {
              "label": "reportCompletedExits",
              "offset": 0,
              "slot": "164",
              "type": "t_uint256",
              "contract": "CasimirUpkeep",
              "src": "src/v1/CasimirUpkeep.sol:52"
            },
            {
              "label": "reportCompoundablePoolIds",
              "offset": 0,
              "slot": "165",
              "type": "t_array(t_uint32)5_storage",
              "contract": "CasimirUpkeep",
              "src": "src/v1/CasimirUpkeep.sol:54"
            },
            {
              "label": "finalizableCompoundablePoolIds",
              "offset": 0,
              "slot": "166",
              "type": "t_array(t_uint32)5_storage",
              "contract": "CasimirUpkeep",
              "src": "src/v1/CasimirUpkeep.sol:56"
            },
            {
              "label": "reportRequests",
              "offset": 0,
              "slot": "167",
              "type": "t_mapping(t_bytes32,t_enum(RequestType)27584)",
              "contract": "CasimirUpkeep",
              "src": "src/v1/CasimirUpkeep.sol:58"
            },
            {
              "label": "reportResponseError",
              "offset": 0,
              "slot": "168",
              "type": "t_bytes_storage",
              "contract": "CasimirUpkeep",
              "src": "src/v1/CasimirUpkeep.sol:60"
            },
            {
              "label": "requestSource",
              "offset": 0,
              "slot": "169",
              "type": "t_string_storage",
              "contract": "CasimirUpkeep",
              "src": "src/v1/CasimirUpkeep.sol:62"
            },
            {
              "label": "defaultRequestArgs",
              "offset": 0,
              "slot": "170",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "CasimirUpkeep",
              "src": "src/v1/CasimirUpkeep.sol:64"
            },
            {
              "label": "fulfillGasLimit",
              "offset": 0,
              "slot": "171",
              "type": "t_uint32",
              "contract": "CasimirUpkeep",
              "src": "src/v1/CasimirUpkeep.sol:66"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "172",
              "type": "t_array(t_uint256)50_storage",
              "contract": "CasimirUpkeep",
              "src": "src/v1/CasimirUpkeep.sol:68"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint32)5_storage": {
              "label": "uint32[5]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)4175": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_contract(ICasimirFactory)26854": {
              "label": "contract ICasimirFactory",
              "numberOfBytes": "20"
            },
            "t_contract(ICasimirManager)27334": {
              "label": "contract ICasimirManager",
              "numberOfBytes": "20"
            },
            "t_enum(ReportStatus)27588": {
              "label": "enum ICasimirUpkeep.ReportStatus",
              "members": [
                "FINALIZED",
                "REQUESTING",
                "PROCESSING"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RequestType)27584": {
              "label": "enum ICasimirUpkeep.RequestType",
              "members": [
                "NONE",
                "BALANCES",
                "DETAILS"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_enum(RequestType)27584)": {
              "label": "mapping(bytes32 => enum ICasimirUpkeep.RequestType)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/CasimirViews.sol:CasimirViews": {
        "src": "src/v1/CasimirViews.sol:14",
        "version": {
          "withMetadata": "3bc7d9d9dfdd3da40c12c70f499650df1e10172e27b0520b8a8fd63e3c960ed9",
          "withoutMetadata": "f83ea404e96f1f5320e1b3a28e1dbd96a632fda8644b6ccbe6a00906bed1d685",
          "linkedWithoutMetadata": "f83ea404e96f1f5320e1b3a28e1dbd96a632fda8644b6ccbe6a00906bed1d685"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "src/v1/interfaces/ICasimirViews.sol:ICasimirViews",
          "src/v1/interfaces/ICasimirCore.sol:ICasimirCore"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address)",
          "getCompoundablePoolIds(uint256,uint256)",
          "getDepositedPoolCount()",
          "getDepositedPoolPublicKeys(uint256,uint256)",
          "getDepositedPoolStatuses(uint256,uint256)",
          "getOperators(uint256,uint256)",
          "getPoolConfig(uint32)",
          "getSweptBalance(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "manager",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ICasimirManager)27334",
              "contract": "CasimirViews",
              "src": "src/v1/CasimirViews.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "CasimirViews",
              "src": "src/v1/CasimirViews.sol:20"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICasimirManager)27334": {
              "label": "contract ICasimirManager",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/dev/CasimirCore.sol:CasimirCoreDev": {
        "src": "src/v1/dev/CasimirCore.sol:7",
        "inherit": [
          "src/v1/dev/interfaces/ICasimirCore.sol:ICasimirCoreDev"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/dev/CasimirFactory.sol:CasimirFactoryDev": {
        "src": "src/v1/dev/CasimirFactory.sol:15",
        "version": {
          "withMetadata": "1bffa76b0b1842a261020c71db0ff6a3a69012b281884fe8abdd0e967c6c8aa6",
          "withoutMetadata": "4e2d0bcc5304ad1d2420aee8d134a87065d007c699d3a8e2baf0b9ba8727c975",
          "linkedWithoutMetadata": "4e2d0bcc5304ad1d2420aee8d134a87065d007c699d3a8e2baf0b9ba8727c975"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "src/v1/dev/CasimirCore.sol:CasimirCoreDev",
          "src/v1/dev/interfaces/ICasimirFactory.sol:ICasimirFactoryDev",
          "src/v1/dev/interfaces/ICasimirCore.sol:ICasimirCoreDev"
        ],
        "libraries": [
          "src/v1/dev/libraries/CasimirBeacon.sol:CasimirBeaconDev"
        ],
        "methods": [
          "(address,address,address,address,address)",
          "initialize()",
          "deployManager(address,address,(uint256,uint256,uint32,bool,bool,bool,bool,bool))",
          "getManagerConfig(uint32)",
          "getManagerIds()",
          "getOwner()"
        ],
        "linkReferences": [
          {
            "src": "src/v1/dev/libraries/CasimirBeacon.sol",
            "name": "CasimirBeaconDev",
            "length": 20,
            "start": 4224,
            "placeholder": "__$1f23545bd03276ae9fc45b702367e4d8ee$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "CasimirBeaconDev",
            "src": "src/v1/dev/libraries/CasimirBeacon.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "managerAddresses",
              "offset": 0,
              "slot": "151",
              "type": "t_mapping(t_uint32,t_address)",
              "contract": "CasimirFactoryDev",
              "src": "src/v1/dev/CasimirFactory.sol:42"
            },
            {
              "label": "viewsAddresses",
              "offset": 0,
              "slot": "152",
              "type": "t_mapping(t_uint32,t_address)",
              "contract": "CasimirFactoryDev",
              "src": "src/v1/dev/CasimirFactory.sol:44"
            },
            {
              "label": "lastManagerId",
              "offset": 0,
              "slot": "153",
              "type": "t_uint32",
              "contract": "CasimirFactoryDev",
              "src": "src/v1/dev/CasimirFactory.sol:46"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "154",
              "type": "t_array(t_uint256)50_storage",
              "contract": "CasimirFactoryDev",
              "src": "src/v1/dev/CasimirFactory.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint32,t_address)": {
              "label": "mapping(uint32 => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/dev/CasimirManager.sol:CasimirManagerDev": {
        "src": "src/v1/dev/CasimirManager.sol:30",
        "version": {
          "withMetadata": "00d69b9b0b35dd354bff5a1067a15578504e43fe9a9409e084276a558275f59b",
          "withoutMetadata": "0905ee968cdac98fdd455a0a85ba9db093d69f780dc3e2aef0d7366a6794687b",
          "linkedWithoutMetadata": "0905ee968cdac98fdd455a0a85ba9db093d69f780dc3e2aef0d7366a6794687b"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "src/v1/dev/CasimirCore.sol:CasimirCoreDev",
          "src/v1/dev/interfaces/ICasimirManager.sol:ICasimirManagerDev",
          "src/v1/dev/interfaces/ICasimirCore.sol:ICasimirCoreDev"
        ],
        "libraries": [
          "src/v1/dev/libraries/CasimirArray.sol:CasimirArrayDev",
          "@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable",
          "src/v1/dev/libraries/CasimirBeacon.sol:CasimirBeaconDev",
          "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable"
        ],
        "methods": [
          "(address,address,address,address,address,address,address,address,address)",
          "initialize(address,address,(uint256,uint256,uint32,bool,bool,bool,bool,bool))",
          "()",
          "depositStake()",
          "depositRewards(uint32)",
          "depositExitedBalance(uint32)",
          "depositRecoveredBalance(uint32)",
          "depositClusterBalance(uint64[],(uint32,uint64,uint64,bool,uint256),uint256,uint256,bool)",
          "depositFunctionsBalance(uint256,uint256,bool)",
          "depositUpkeepBalance(uint256,uint256,bool)",
          "depositReservedFees()",
          "withdrawReservedFees(uint256)",
          "rebalanceStake(uint256,uint256,uint256,uint256)",
          "compoundRewards(uint32[5])",
          "requestWithdrawal(uint256)",
          "fulfillWithdrawals(uint256)",
          "initiatePool(bytes32,bytes,bytes,bytes,uint64[],bytes)",
          "activatePool(uint256,(uint32,uint64,uint64,bool,uint256),uint256,uint256,bool)",
          "resharePool(uint32,uint64[],uint64,uint64,bytes,(uint32,uint64,uint64,bool,uint256),(uint32,uint64,uint64,bool,uint256),uint256,uint256,bool)",
          "reportForcedExits(uint32[])",
          "reportCompletedExit(uint256,uint32[],(uint32,uint64,uint64,bool,uint256))",
          "withdrawClusterBalance(uint64[],(uint32,uint64,uint64,bool,uint256),uint256)",
          "cancelFunctions()",
          "cancelUpkeep()",
          "withdrawLINKBalance(uint256)",
          "withdrawSSVBalance(uint256)",
          "getPendingWithdrawalEligibility(uint256,uint256)",
          "getPendingPoolIds()",
          "getStakedPoolIds()",
          "getPoolAddress(uint32)",
          "getRegistryAddress()",
          "getUpkeepAddress()",
          "getUserStake(address)",
          "getTotalStake()",
          "getBufferedBalance()",
          "getWithdrawableBalance()"
        ],
        "linkReferences": [
          {
            "src": "src/v1/dev/libraries/CasimirBeacon.sol",
            "name": "CasimirBeaconDev",
            "length": 20,
            "start": 7238,
            "placeholder": "__$1f23545bd03276ae9fc45b702367e4d8ee$__"
          },
          {
            "src": "src/v1/dev/libraries/CasimirBeacon.sol",
            "name": "CasimirBeaconDev",
            "length": 20,
            "start": 15460,
            "placeholder": "__$1f23545bd03276ae9fc45b702367e4d8ee$__"
          }
        ],
        "errors": [
          {
            "kind": "external-library-linking",
            "name": "CasimirBeaconDev",
            "src": "src/v1/dev/libraries/CasimirBeacon.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "lockPeriod",
              "offset": 0,
              "slot": "151",
              "type": "t_uint256",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:36"
            },
            {
              "label": "userFee",
              "offset": 0,
              "slot": "152",
              "type": "t_uint32",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:38"
            },
            {
              "label": "eigenStake",
              "offset": 4,
              "slot": "152",
              "type": "t_bool",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:40"
            },
            {
              "label": "liquidStake",
              "offset": 5,
              "slot": "152",
              "type": "t_bool",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:42"
            },
            {
              "label": "reportPeriod",
              "offset": 6,
              "slot": "152",
              "type": "t_uint32",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:44"
            },
            {
              "label": "functionsId",
              "offset": 10,
              "slot": "152",
              "type": "t_uint64",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:46"
            },
            {
              "label": "upkeepId",
              "offset": 0,
              "slot": "153",
              "type": "t_uint256",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:48"
            },
            {
              "label": "latestBeaconBalance",
              "offset": 0,
              "slot": "154",
              "type": "t_uint256",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:50"
            },
            {
              "label": "finalizableActivations",
              "offset": 0,
              "slot": "155",
              "type": "t_uint256",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:52"
            },
            {
              "label": "finalizableCompletedExits",
              "offset": 0,
              "slot": "156",
              "type": "t_uint256",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:54"
            },
            {
              "label": "requestedWithdrawalBalance",
              "offset": 0,
              "slot": "157",
              "type": "t_uint256",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:56"
            },
            {
              "label": "reservedFeeBalance",
              "offset": 0,
              "slot": "158",
              "type": "t_uint256",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:58"
            },
            {
              "label": "requestedExits",
              "offset": 0,
              "slot": "159",
              "type": "t_uint256",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:60"
            },
            {
              "label": "daoOracleAddress",
              "offset": 0,
              "slot": "160",
              "type": "t_address",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:115"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "161",
              "type": "t_contract(ICasimirFactoryDev)24933",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:117"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "162",
              "type": "t_contract(ICasimirRegistryDev)25653",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:119"
            },
            {
              "label": "upkeep",
              "offset": 0,
              "slot": "163",
              "type": "t_contract(ICasimirUpkeepDev)25751",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:121"
            },
            {
              "label": "lastPoolId",
              "offset": 20,
              "slot": "163",
              "type": "t_uint32",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:123"
            },
            {
              "label": "latestBeaconBalanceAfterFees",
              "offset": 0,
              "slot": "164",
              "type": "t_uint256",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:125"
            },
            {
              "label": "latestActiveRewardBalance",
              "offset": 0,
              "slot": "165",
              "type": "t_int256",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:127"
            },
            {
              "label": "finalizableExitedBalance",
              "offset": 0,
              "slot": "166",
              "type": "t_uint256",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:129"
            },
            {
              "label": "finalizableRecoveredBalance",
              "offset": 0,
              "slot": "167",
              "type": "t_uint256",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:131"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "168",
              "type": "t_mapping(t_address,t_struct(User)24808_storage)",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:133"
            },
            {
              "label": "stakeRatioSum",
              "offset": 0,
              "slot": "169",
              "type": "t_uint256",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:135"
            },
            {
              "label": "requestedWithdrawals",
              "offset": 0,
              "slot": "170",
              "type": "t_uint256",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:137"
            },
            {
              "label": "requestedWithdrawalQueue",
              "offset": 0,
              "slot": "171",
              "type": "t_array(t_struct(Withdrawal)24815_storage)dyn_storage",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:139"
            },
            {
              "label": "poolAddresses",
              "offset": 0,
              "slot": "172",
              "type": "t_mapping(t_uint32,t_address)",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:141"
            },
            {
              "label": "tipBalance",
              "offset": 0,
              "slot": "173",
              "type": "t_uint256",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:143"
            },
            {
              "label": "recoveredBalances",
              "offset": 0,
              "slot": "174",
              "type": "t_mapping(t_uint32,t_uint256)",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:145"
            },
            {
              "label": "prepoolBalance",
              "offset": 0,
              "slot": "175",
              "type": "t_uint256",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:147"
            },
            {
              "label": "exitedBalance",
              "offset": 0,
              "slot": "176",
              "type": "t_uint256",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:149"
            },
            {
              "label": "readyPoolIds",
              "offset": 0,
              "slot": "177",
              "type": "t_array(t_uint32)dyn_storage",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:151"
            },
            {
              "label": "pendingPoolIds",
              "offset": 0,
              "slot": "178",
              "type": "t_array(t_uint32)dyn_storage",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:153"
            },
            {
              "label": "stakedPoolIds",
              "offset": 0,
              "slot": "179",
              "type": "t_array(t_uint32)dyn_storage",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:155"
            },
            {
              "label": "forcedExits",
              "offset": 0,
              "slot": "180",
              "type": "t_uint256",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:157"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "181",
              "type": "t_array(t_uint256)50_storage",
              "contract": "CasimirManagerDev",
              "src": "src/v1/dev/CasimirManager.sol:159"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Withdrawal)24815_storage)dyn_storage": {
              "label": "struct ICasimirCoreDev.Withdrawal[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint32)dyn_storage": {
              "label": "uint32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICasimirFactoryDev)24933": {
              "label": "contract ICasimirFactoryDev",
              "numberOfBytes": "20"
            },
            "t_contract(ICasimirRegistryDev)25653": {
              "label": "contract ICasimirRegistryDev",
              "numberOfBytes": "20"
            },
            "t_contract(ICasimirUpkeepDev)25751": {
              "label": "contract ICasimirUpkeepDev",
              "numberOfBytes": "20"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)24808_storage)": {
              "label": "mapping(address => struct ICasimirCoreDev.User)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint32,t_address)": {
              "label": "mapping(uint32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint32,t_uint256)": {
              "label": "mapping(uint32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(User)24808_storage": {
              "label": "struct ICasimirCoreDev.User",
              "members": [
                {
                  "label": "stake0",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "stakeRatioSum0",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Withdrawal)24815_storage": {
              "label": "struct ICasimirCoreDev.Withdrawal",
              "members": [
                {
                  "label": "userAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "period",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/dev/CasimirPool.sol:CasimirPoolDev": {
        "src": "src/v1/dev/CasimirPool.sol:15",
        "version": {
          "withMetadata": "6f7ecd0a3d9788be614ed9415b176c9c775c7b90e09cf4f23c427e74812eda3d",
          "withoutMetadata": "f29a0001a334fd64f2c64fec980ea5931de1dce5c0d307d62a2029a702e3e26f",
          "linkedWithoutMetadata": "f29a0001a334fd64f2c64fec980ea5931de1dce5c0d307d62a2029a702e3e26f"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "src/v1/dev/CasimirCore.sol:CasimirCoreDev",
          "src/v1/dev/interfaces/ICasimirPool.sol:ICasimirPoolDev",
          "src/v1/dev/interfaces/ICasimirCore.sol:ICasimirCoreDev"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol:MathUpgradeable"
        ],
        "methods": [
          "(address)",
          "initialize(address,uint64[],uint32,bytes,bytes)",
          "depositStake(bytes32,bytes,bytes)",
          "depositRewards()",
          "setOperatorIds(uint64[])",
          "setReshares(uint256)",
          "setStatus(uint8)",
          "withdrawBalance(uint32[])",
          "getOperatorIds()",
          "getRegistration()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "publicKey",
              "offset": 0,
              "slot": "151",
              "type": "t_bytes_storage",
              "contract": "CasimirPoolDev",
              "src": "src/v1/dev/CasimirPool.sol:17"
            },
            {
              "label": "reshares",
              "offset": 0,
              "slot": "152",
              "type": "t_uint256",
              "contract": "CasimirPoolDev",
              "src": "src/v1/dev/CasimirPool.sol:19"
            },
            {
              "label": "status",
              "offset": 0,
              "slot": "153",
              "type": "t_enum(PoolStatus)24786",
              "contract": "CasimirPoolDev",
              "src": "src/v1/dev/CasimirPool.sol:21"
            },
            {
              "label": "operatorIds",
              "offset": 0,
              "slot": "154",
              "type": "t_array(t_uint64)dyn_storage",
              "contract": "CasimirPoolDev",
              "src": "src/v1/dev/CasimirPool.sol:30"
            },
            {
              "label": "poolId",
              "offset": 0,
              "slot": "155",
              "type": "t_uint32",
              "contract": "CasimirPoolDev",
              "src": "src/v1/dev/CasimirPool.sol:32"
            },
            {
              "label": "shares",
              "offset": 0,
              "slot": "156",
              "type": "t_bytes_storage",
              "contract": "CasimirPoolDev",
              "src": "src/v1/dev/CasimirPool.sol:34"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "157",
              "type": "t_contract(ICasimirManagerDev)25413",
              "contract": "CasimirPoolDev",
              "src": "src/v1/dev/CasimirPool.sol:36"
            },
            {
              "label": "registry",
              "offset": 0,
              "slot": "158",
              "type": "t_contract(ICasimirRegistryDev)25653",
              "contract": "CasimirPoolDev",
              "src": "src/v1/dev/CasimirPool.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "159",
              "type": "t_array(t_uint256)50_storage",
              "contract": "CasimirPoolDev",
              "src": "src/v1/dev/CasimirPool.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint64)dyn_storage": {
              "label": "uint64[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(ICasimirManagerDev)25413": {
              "label": "contract ICasimirManagerDev",
              "numberOfBytes": "20"
            },
            "t_contract(ICasimirRegistryDev)25653": {
              "label": "contract ICasimirRegistryDev",
              "numberOfBytes": "20"
            },
            "t_enum(PoolStatus)24786": {
              "label": "enum ICasimirCoreDev.PoolStatus",
              "members": [
                "READY",
                "PENDING",
                "ACTIVE",
                "EXITING_FORCED",
                "EXITING_REQUESTED",
                "WITHDRAWN"
              ],
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/dev/CasimirRegistry.sol:CasimirRegistryDev": {
        "src": "src/v1/dev/CasimirRegistry.sol:15",
        "version": {
          "withMetadata": "cedfa1ad176ef63e7691356eee11cb06d172c3319308dec42242e36d2b34c774",
          "withoutMetadata": "31c6bfa1def2cf7827804c4318f9bd05c0915ecbb110d6394cef201537f5bd0e",
          "linkedWithoutMetadata": "31c6bfa1def2cf7827804c4318f9bd05c0915ecbb110d6394cef201537f5bd0e"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "src/v1/dev/CasimirCore.sol:CasimirCoreDev",
          "src/v1/dev/interfaces/ICasimirRegistry.sol:ICasimirRegistryDev",
          "src/v1/dev/interfaces/ICasimirCore.sol:ICasimirCoreDev"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "initialize(uint256,bool,bool)",
          "registerOperator(uint64)",
          "depositCollateral(uint64)",
          "requestWithdrawal(uint64,uint256)",
          "requestDeactivation(uint64)",
          "addOperatorPool(uint64,uint32)",
          "removeOperatorPool(uint64,uint32,uint256)",
          "getOperator(uint64)",
          "getOperatorIds()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "minCollateral",
              "offset": 0,
              "slot": "151",
              "type": "t_uint256",
              "contract": "CasimirRegistryDev",
              "src": "src/v1/dev/CasimirRegistry.sol:23"
            },
            {
              "label": "privateOperators",
              "offset": 0,
              "slot": "152",
              "type": "t_bool",
              "contract": "CasimirRegistryDev",
              "src": "src/v1/dev/CasimirRegistry.sol:25"
            },
            {
              "label": "verifiedOperators",
              "offset": 1,
              "slot": "152",
              "type": "t_bool",
              "contract": "CasimirRegistryDev",
              "src": "src/v1/dev/CasimirRegistry.sol:27"
            },
            {
              "label": "manager",
              "offset": 2,
              "slot": "152",
              "type": "t_contract(ICasimirManagerDev)25413",
              "contract": "CasimirRegistryDev",
              "src": "src/v1/dev/CasimirRegistry.sol:34"
            },
            {
              "label": "operatorIds",
              "offset": 0,
              "slot": "153",
              "type": "t_array(t_uint64)dyn_storage",
              "contract": "CasimirRegistryDev",
              "src": "src/v1/dev/CasimirRegistry.sol:36"
            },
            {
              "label": "operators",
              "offset": 0,
              "slot": "154",
              "type": "t_mapping(t_uint64,t_struct(Operator)24753_storage)",
              "contract": "CasimirRegistryDev",
              "src": "src/v1/dev/CasimirRegistry.sol:38"
            },
            {
              "label": "operatorPools",
              "offset": 0,
              "slot": "155",
              "type": "t_mapping(t_uint64,t_mapping(t_uint32,t_bool))",
              "contract": "CasimirRegistryDev",
              "src": "src/v1/dev/CasimirRegistry.sol:40"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "156",
              "type": "t_array(t_uint256)50_storage",
              "contract": "CasimirRegistryDev",
              "src": "src/v1/dev/CasimirRegistry.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint64)dyn_storage": {
              "label": "uint64[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICasimirManagerDev)25413": {
              "label": "contract ICasimirManagerDev",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint32,t_bool)": {
              "label": "mapping(uint32 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_mapping(t_uint32,t_bool))": {
              "label": "mapping(uint64 => mapping(uint32 => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint64,t_struct(Operator)24753_storage)": {
              "label": "mapping(uint64 => struct ICasimirCoreDev.Operator)",
              "numberOfBytes": "32"
            },
            "t_struct(Operator)24753_storage": {
              "label": "struct ICasimirCoreDev.Operator",
              "members": [
                {
                  "label": "id",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "collateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "poolCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "resharing",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/dev/CasimirUpkeep.sol:CasimirUpkeepDev": {
        "src": "src/v1/dev/CasimirUpkeep.sol:15",
        "version": {
          "withMetadata": "d0d9780fcfc7035806820d23f4382cc29a0460bd721c96dc09fdb2d8db52ccfe",
          "withoutMetadata": "f45d369fde71578e69df7c3be14a9826b25d364725db1d7f617a665578bab5ef",
          "linkedWithoutMetadata": "f45d369fde71578e69df7c3be14a9826b25d364725db1d7f617a665578bab5ef"
        },
        "inherit": [
          "src/v1/dev/vendor/FunctionsClient.sol:FunctionsClient",
          "@chainlink/contracts/src/v0.8/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface",
          "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "src/v1/dev/CasimirCore.sol:CasimirCoreDev",
          "src/v1/dev/interfaces/ICasimirUpkeep.sol:ICasimirUpkeepDev",
          "@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol:AutomationCompatibleInterface",
          "src/v1/dev/interfaces/ICasimirCore.sol:ICasimirCoreDev"
        ],
        "libraries": [
          "@chainlink/contracts/src/v0.8/dev/functions/Functions.sol:Functions",
          "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol:StringsUpgradeable"
        ],
        "methods": [
          "()",
          "initialize(address,address,bool)",
          "performUpkeep(bytes)",
          "setFunctionsOracle(address)",
          "setFunctionsRequest(string,string[],uint32)",
          "checkUpkeep(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "101",
              "type": "t_uint256",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ReentrancyGuardUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
            },
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "151",
              "type": "t_contract(FunctionsOracleInterface)4175",
              "contract": "FunctionsClient",
              "src": "src/v1/dev/vendor/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "152",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "src/v1/dev/vendor/FunctionsClient.sol:14"
            },
            {
              "label": "compoundStake",
              "offset": 0,
              "slot": "153",
              "type": "t_bool",
              "contract": "CasimirUpkeepDev",
              "src": "src/v1/dev/CasimirUpkeep.sol:26"
            },
            {
              "label": "factory",
              "offset": 1,
              "slot": "153",
              "type": "t_contract(ICasimirFactoryDev)24933",
              "contract": "CasimirUpkeepDev",
              "src": "src/v1/dev/CasimirUpkeep.sol:30"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "154",
              "type": "t_contract(ICasimirManagerDev)25413",
              "contract": "CasimirUpkeepDev",
              "src": "src/v1/dev/CasimirUpkeep.sol:32"
            },
            {
              "label": "previousReportTimestamp",
              "offset": 0,
              "slot": "155",
              "type": "t_uint256",
              "contract": "CasimirUpkeepDev",
              "src": "src/v1/dev/CasimirUpkeep.sol:34"
            },
            {
              "label": "reportStatus",
              "offset": 0,
              "slot": "156",
              "type": "t_enum(ReportStatus)25669",
              "contract": "CasimirUpkeepDev",
              "src": "src/v1/dev/CasimirUpkeep.sol:36"
            },
            {
              "label": "reportPeriod",
              "offset": 1,
              "slot": "156",
              "type": "t_uint32",
              "contract": "CasimirUpkeepDev",
              "src": "src/v1/dev/CasimirUpkeep.sol:38"
            },
            {
              "label": "reportRemainingRequests",
              "offset": 0,
              "slot": "157",
              "type": "t_uint256",
              "contract": "CasimirUpkeepDev",
              "src": "src/v1/dev/CasimirUpkeep.sol:40"
            },
            {
              "label": "reportRequestBlock",
              "offset": 0,
              "slot": "158",
              "type": "t_uint256",
              "contract": "CasimirUpkeepDev",
              "src": "src/v1/dev/CasimirUpkeep.sol:42"
            },
            {
              "label": "reportTimestamp",
              "offset": 0,
              "slot": "159",
              "type": "t_uint256",
              "contract": "CasimirUpkeepDev",
              "src": "src/v1/dev/CasimirUpkeep.sol:44"
            },
            {
              "label": "reportSweptBalance",
              "offset": 0,
              "slot": "160",
              "type": "t_uint256",
              "contract": "CasimirUpkeepDev",
              "src": "src/v1/dev/CasimirUpkeep.sol:46"
            },
            {
              "label": "reportBeaconBalance",
              "offset": 0,
              "slot": "161",
              "type": "t_uint256",
              "contract": "CasimirUpkeepDev",
              "src": "src/v1/dev/CasimirUpkeep.sol:48"
            },
            {
              "label": "reportActivatedDeposits",
              "offset": 0,
              "slot": "162",
              "type": "t_uint256",
              "contract": "CasimirUpkeepDev",
              "src": "src/v1/dev/CasimirUpkeep.sol:50"
            },
            {
              "label": "reportForcedExits",
              "offset": 0,
              "slot": "163",
              "type": "t_uint256",
              "contract": "CasimirUpkeepDev",
              "src": "src/v1/dev/CasimirUpkeep.sol:52"
            },
            {
              "label": "reportCompletedExits",
              "offset": 0,
              "slot": "164",
              "type": "t_uint256",
              "contract": "CasimirUpkeepDev",
              "src": "src/v1/dev/CasimirUpkeep.sol:54"
            },
            {
              "label": "reportCompoundablePoolIds",
              "offset": 0,
              "slot": "165",
              "type": "t_array(t_uint32)5_storage",
              "contract": "CasimirUpkeepDev",
              "src": "src/v1/dev/CasimirUpkeep.sol:56"
            },
            {
              "label": "finalizableCompoundablePoolIds",
              "offset": 0,
              "slot": "166",
              "type": "t_array(t_uint32)5_storage",
              "contract": "CasimirUpkeepDev",
              "src": "src/v1/dev/CasimirUpkeep.sol:58"
            },
            {
              "label": "reportRequests",
              "offset": 0,
              "slot": "167",
              "type": "t_mapping(t_bytes32,t_enum(RequestType)25665)",
              "contract": "CasimirUpkeepDev",
              "src": "src/v1/dev/CasimirUpkeep.sol:60"
            },
            {
              "label": "reportResponseError",
              "offset": 0,
              "slot": "168",
              "type": "t_bytes_storage",
              "contract": "CasimirUpkeepDev",
              "src": "src/v1/dev/CasimirUpkeep.sol:62"
            },
            {
              "label": "requestSource",
              "offset": 0,
              "slot": "169",
              "type": "t_string_storage",
              "contract": "CasimirUpkeepDev",
              "src": "src/v1/dev/CasimirUpkeep.sol:64"
            },
            {
              "label": "defaultRequestArgs",
              "offset": 0,
              "slot": "170",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "CasimirUpkeepDev",
              "src": "src/v1/dev/CasimirUpkeep.sol:66"
            },
            {
              "label": "fulfillGasLimit",
              "offset": 0,
              "slot": "171",
              "type": "t_uint32",
              "contract": "CasimirUpkeepDev",
              "src": "src/v1/dev/CasimirUpkeep.sol:68"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "172",
              "type": "t_array(t_uint256)50_storage",
              "contract": "CasimirUpkeepDev",
              "src": "src/v1/dev/CasimirUpkeep.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint32)5_storage": {
              "label": "uint32[5]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)4175": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_contract(ICasimirFactoryDev)24933": {
              "label": "contract ICasimirFactoryDev",
              "numberOfBytes": "20"
            },
            "t_contract(ICasimirManagerDev)25413": {
              "label": "contract ICasimirManagerDev",
              "numberOfBytes": "20"
            },
            "t_enum(ReportStatus)25669": {
              "label": "enum ICasimirUpkeepDev.ReportStatus",
              "members": [
                "FINALIZED",
                "REQUESTING",
                "PROCESSING"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(RequestType)25665": {
              "label": "enum ICasimirUpkeepDev.RequestType",
              "members": [
                "NONE",
                "BALANCES",
                "DETAILS"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_enum(RequestType)25665)": {
              "label": "mapping(bytes32 => enum ICasimirUpkeepDev.RequestType)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/dev/CasimirViews.sol:CasimirViewsDev": {
        "src": "src/v1/dev/CasimirViews.sol:14",
        "version": {
          "withMetadata": "3d08920d417808b4a341b91cd688c3e19cac05b9ac39367da44f5db92bf40c08",
          "withoutMetadata": "f83ea404e96f1f5320e1b3a28e1dbd96a632fda8644b6ccbe6a00906bed1d685",
          "linkedWithoutMetadata": "f83ea404e96f1f5320e1b3a28e1dbd96a632fda8644b6ccbe6a00906bed1d685"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
          "src/v1/dev/interfaces/ICasimirViews.sol:ICasimirViewsDev",
          "src/v1/dev/interfaces/ICasimirCore.sol:ICasimirCoreDev"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initialize(address)",
          "getCompoundablePoolIds(uint256,uint256)",
          "getDepositedPoolCount()",
          "getDepositedPoolPublicKeys(uint256,uint256)",
          "getDepositedPoolStatuses(uint256,uint256)",
          "getOperators(uint256,uint256)",
          "getPoolConfig(uint32)",
          "getSweptBalance(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "manager",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(ICasimirManagerDev)25413",
              "contract": "CasimirViewsDev",
              "src": "src/v1/dev/CasimirViews.sol:18"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "CasimirViewsDev",
              "src": "src/v1/dev/CasimirViews.sol:20"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ICasimirManagerDev)25413": {
              "label": "contract ICasimirManagerDev",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/dev/interfaces/ICasimirCore.sol:ICasimirCoreDev": {
        "src": "src/v1/dev/interfaces/ICasimirCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/dev/interfaces/ICasimirFactory.sol:ICasimirFactoryDev": {
        "src": "src/v1/dev/interfaces/ICasimirFactory.sol:7",
        "inherit": [
          "src/v1/dev/interfaces/ICasimirCore.sol:ICasimirCoreDev"
        ],
        "libraries": [],
        "methods": [
          "deployManager(address,address,(uint256,uint256,uint32,bool,bool,bool,bool,bool))",
          "managerBeaconAddress()",
          "poolBeaconAddress()",
          "registryBeaconAddress()",
          "upkeepBeaconAddress()",
          "viewsBeaconAddress()",
          "getManagerConfig(uint32)",
          "getManagerIds()",
          "getOwner()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/dev/interfaces/ICasimirManager.sol:ICasimirManagerDev": {
        "src": "src/v1/dev/interfaces/ICasimirManager.sol:7",
        "inherit": [
          "src/v1/dev/interfaces/ICasimirCore.sol:ICasimirCoreDev"
        ],
        "libraries": [],
        "methods": [
          "depositStake()",
          "depositRewards(uint32)",
          "depositExitedBalance(uint32)",
          "depositRecoveredBalance(uint32)",
          "depositReservedFees()",
          "depositClusterBalance(uint64[],(uint32,uint64,uint64,bool,uint256),uint256,uint256,bool)",
          "depositFunctionsBalance(uint256,uint256,bool)",
          "depositUpkeepBalance(uint256,uint256,bool)",
          "rebalanceStake(uint256,uint256,uint256,uint256)",
          "compoundRewards(uint32[5])",
          "requestWithdrawal(uint256)",
          "fulfillWithdrawals(uint256)",
          "initiatePool(bytes32,bytes,bytes,bytes,uint64[],bytes)",
          "withdrawReservedFees(uint256)",
          "activatePool(uint256,(uint32,uint64,uint64,bool,uint256),uint256,uint256,bool)",
          "resharePool(uint32,uint64[],uint64,uint64,bytes,(uint32,uint64,uint64,bool,uint256),(uint32,uint64,uint64,bool,uint256),uint256,uint256,bool)",
          "reportForcedExits(uint32[])",
          "reportCompletedExit(uint256,uint32[],(uint32,uint64,uint64,bool,uint256))",
          "withdrawClusterBalance(uint64[],(uint32,uint64,uint64,bool,uint256),uint256)",
          "withdrawLINKBalance(uint256)",
          "withdrawSSVBalance(uint256)",
          "cancelFunctions()",
          "cancelUpkeep()",
          "lockPeriod()",
          "userFee()",
          "eigenStake()",
          "liquidStake()",
          "functionsId()",
          "upkeepId()",
          "latestBeaconBalance()",
          "reservedFeeBalance()",
          "requestedWithdrawalBalance()",
          "requestedExits()",
          "finalizableActivations()",
          "finalizableCompletedExits()",
          "reportPeriod()",
          "getTotalStake()",
          "getPendingPoolIds()",
          "getStakedPoolIds()",
          "getBufferedBalance()",
          "getPendingWithdrawalEligibility(uint256,uint256)",
          "getWithdrawableBalance()",
          "getUserStake(address)",
          "getPoolAddress(uint32)",
          "getRegistryAddress()",
          "getUpkeepAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/dev/interfaces/ICasimirPool.sol:ICasimirPoolDev": {
        "src": "src/v1/dev/interfaces/ICasimirPool.sol:6",
        "inherit": [
          "src/v1/dev/interfaces/ICasimirCore.sol:ICasimirCoreDev"
        ],
        "libraries": [],
        "methods": [
          "depositStake(bytes32,bytes,bytes)",
          "depositRewards()",
          "setOperatorIds(uint64[])",
          "setReshares(uint256)",
          "setStatus(uint8)",
          "withdrawBalance(uint32[])",
          "publicKey()",
          "reshares()",
          "status()",
          "getOperatorIds()",
          "getRegistration()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/dev/interfaces/ICasimirRegistry.sol:ICasimirRegistryDev": {
        "src": "src/v1/dev/interfaces/ICasimirRegistry.sol:6",
        "inherit": [
          "src/v1/dev/interfaces/ICasimirCore.sol:ICasimirCoreDev"
        ],
        "libraries": [],
        "methods": [
          "registerOperator(uint64)",
          "depositCollateral(uint64)",
          "requestWithdrawal(uint64,uint256)",
          "requestDeactivation(uint64)",
          "addOperatorPool(uint64,uint32)",
          "removeOperatorPool(uint64,uint32,uint256)",
          "getOperator(uint64)",
          "getOperatorIds()",
          "minCollateral()",
          "privateOperators()",
          "verifiedOperators()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/dev/interfaces/ICasimirUpkeep.sol:ICasimirUpkeepDev": {
        "src": "src/v1/dev/interfaces/ICasimirUpkeep.sol:7",
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol:AutomationCompatibleInterface",
          "src/v1/dev/interfaces/ICasimirCore.sol:ICasimirCoreDev"
        ],
        "libraries": [],
        "methods": [
          "performUpkeep(bytes)",
          "setFunctionsRequest(string,string[],uint32)",
          "setFunctionsOracle(address)",
          "checkUpkeep(bytes)",
          "compoundStake()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/dev/interfaces/ICasimirViews.sol:ICasimirViewsDev": {
        "src": "src/v1/dev/interfaces/ICasimirViews.sol:6",
        "inherit": [
          "src/v1/dev/interfaces/ICasimirCore.sol:ICasimirCoreDev"
        ],
        "libraries": [],
        "methods": [
          "getCompoundablePoolIds(uint256,uint256)",
          "getDepositedPoolCount()",
          "getDepositedPoolPublicKeys(uint256,uint256)",
          "getDepositedPoolStatuses(uint256,uint256)",
          "getOperators(uint256,uint256)",
          "getPoolConfig(uint32)",
          "getSweptBalance(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/dev/libraries/CasimirArray.sol:CasimirArrayDev": {
        "src": "src/v1/dev/libraries/CasimirArray.sol:7",
        "version": {
          "withMetadata": "c30916fb3506ad9b01b4a08bb13d81db0ec30693d1f4986049548a627c8b0843",
          "withoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6",
          "linkedWithoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/dev/libraries/CasimirBeacon.sol:CasimirBeaconDev": {
        "src": "src/v1/dev/libraries/CasimirBeacon.sol:13",
        "version": {
          "withMetadata": "332f5dfffe12274dda0c4e99fbe4eb6091e4e98eed7128b64db2f73fe59d8dd8",
          "withoutMetadata": "a86861859337ac6325dee6bb5c8b625fc6b7a8557ea90fb495001e94b83274cb",
          "linkedWithoutMetadata": "a86861859337ac6325dee6bb5c8b625fc6b7a8557ea90fb495001e94b83274cb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createManager(address,address,address,(uint256,uint256,uint32,bool,bool,bool,bool,bool))",
          "createPool(address,address,uint64[],uint32,bytes,bytes)",
          "createRegistry(address,uint256,bool,bool)",
          "createUpkeep(address,address,address,bool)",
          "createViews(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/dev/vendor/FunctionsClient.sol:FunctionsClient": {
        "src": "src/v1/dev/vendor/FunctionsClient.sol:12",
        "inherit": [
          "@chainlink/contracts/src/v0.8/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "@chainlink/contracts/src/v0.8/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "getDONPublicKey()",
          "estimateCost((uint8,uint8,uint8,string,bytes,string[]),uint64,uint32,uint256)",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)4175",
              "contract": "FunctionsClient",
              "src": "src/v1/dev/vendor/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "src/v1/dev/vendor/FunctionsClient.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)4175": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/dev/vendor/interfaces/IAutomationRegistry.sol:IAutomationRegistry": {
        "src": "src/v1/dev/vendor/interfaces/IAutomationRegistry.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getUpkeep(uint256)",
          "addFunds(uint256,uint96)",
          "cancelUpkeep(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/dev/vendor/interfaces/IDepositContract.sol:IDepositContract": {
        "src": "src/v1/dev/vendor/interfaces/IDepositContract.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(bytes,bytes,bytes,bytes32)",
          "get_deposit_root()",
          "get_deposit_count()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/dev/vendor/interfaces/IFunctionsBillingRegistry.sol:IFunctionsBillingRegistry": {
        "src": "src/v1/dev/vendor/interfaces/IFunctionsBillingRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getSubscription(uint64)",
          "createSubscription()",
          "addConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/dev/vendor/interfaces/IKeeperRegistrar.sol:IKeeperRegistrar": {
        "src": "src/v1/dev/vendor/interfaces/IKeeperRegistrar.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerUpkeep((string,bytes,address,uint32,address,bytes,bytes,uint96))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/dev/vendor/interfaces/IWETH9.sol:IWETH9": {
        "src": "src/v1/dev/vendor/interfaces/IWETH9.sol:7",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/interfaces/ICasimirCore.sol:ICasimirCore": {
        "src": "src/v1/interfaces/ICasimirCore.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/interfaces/ICasimirFactory.sol:ICasimirFactory": {
        "src": "src/v1/interfaces/ICasimirFactory.sol:7",
        "inherit": [
          "src/v1/interfaces/ICasimirCore.sol:ICasimirCore"
        ],
        "libraries": [],
        "methods": [
          "deployManager(address,address,(uint256,uint256,uint32,bool,bool,bool,bool,bool))",
          "managerBeaconAddress()",
          "poolBeaconAddress()",
          "registryBeaconAddress()",
          "upkeepBeaconAddress()",
          "viewsBeaconAddress()",
          "getManagerConfig(uint32)",
          "getManagerIds()",
          "getOwner()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/interfaces/ICasimirManager.sol:ICasimirManager": {
        "src": "src/v1/interfaces/ICasimirManager.sol:7",
        "inherit": [
          "src/v1/interfaces/ICasimirCore.sol:ICasimirCore"
        ],
        "libraries": [],
        "methods": [
          "depositStake()",
          "depositRewards(uint32)",
          "depositExitedBalance(uint32)",
          "depositRecoveredBalance(uint32)",
          "depositReservedFees()",
          "depositClusterBalance(uint64[],(uint32,uint64,uint64,bool,uint256),uint256,uint256,bool)",
          "depositFunctionsBalance(uint256,uint256,bool)",
          "depositUpkeepBalance(uint256,uint256,bool)",
          "rebalanceStake(uint256,uint256,uint256,uint256)",
          "compoundRewards(uint32[5])",
          "requestWithdrawal(uint256)",
          "fulfillWithdrawals(uint256)",
          "initiatePool(bytes32,bytes,bytes,bytes,uint64[],bytes)",
          "withdrawReservedFees(uint256)",
          "activatePool(uint256,(uint32,uint64,uint64,bool,uint256),uint256,uint256,bool)",
          "resharePool(uint32,uint64[],uint64,uint64,bytes,(uint32,uint64,uint64,bool,uint256),(uint32,uint64,uint64,bool,uint256),uint256,uint256,bool)",
          "reportForcedExits(uint32[])",
          "reportCompletedExit(uint256,uint32[],(uint32,uint64,uint64,bool,uint256))",
          "withdrawClusterBalance(uint64[],(uint32,uint64,uint64,bool,uint256),uint256)",
          "withdrawLINKBalance(uint256)",
          "withdrawSSVBalance(uint256)",
          "cancelFunctions()",
          "cancelUpkeep()",
          "lockPeriod()",
          "userFee()",
          "eigenStake()",
          "liquidStake()",
          "functionsId()",
          "upkeepId()",
          "latestBeaconBalance()",
          "reservedFeeBalance()",
          "requestedWithdrawalBalance()",
          "requestedExits()",
          "finalizableActivations()",
          "finalizableCompletedExits()",
          "reportPeriod()",
          "getTotalStake()",
          "getPendingPoolIds()",
          "getStakedPoolIds()",
          "getBufferedBalance()",
          "getPendingWithdrawalEligibility(uint256,uint256)",
          "getWithdrawableBalance()",
          "getUserStake(address)",
          "getPoolAddress(uint32)",
          "getRegistryAddress()",
          "getUpkeepAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/interfaces/ICasimirPool.sol:ICasimirPool": {
        "src": "src/v1/interfaces/ICasimirPool.sol:6",
        "inherit": [
          "src/v1/interfaces/ICasimirCore.sol:ICasimirCore"
        ],
        "libraries": [],
        "methods": [
          "depositStake(bytes32,bytes,bytes)",
          "depositRewards()",
          "setOperatorIds(uint64[])",
          "setReshares(uint256)",
          "setStatus(uint8)",
          "withdrawBalance(uint32[])",
          "publicKey()",
          "reshares()",
          "status()",
          "getOperatorIds()",
          "getRegistration()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/interfaces/ICasimirRegistry.sol:ICasimirRegistry": {
        "src": "src/v1/interfaces/ICasimirRegistry.sol:6",
        "inherit": [
          "src/v1/interfaces/ICasimirCore.sol:ICasimirCore"
        ],
        "libraries": [],
        "methods": [
          "registerOperator(uint64)",
          "depositCollateral(uint64)",
          "requestWithdrawal(uint64,uint256)",
          "requestDeactivation(uint64)",
          "addOperatorPool(uint64,uint32)",
          "removeOperatorPool(uint64,uint32,uint256)",
          "getOperator(uint64)",
          "getOperatorIds()",
          "minCollateral()",
          "privateOperators()",
          "verifiedOperators()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/interfaces/ICasimirUpkeep.sol:ICasimirUpkeep": {
        "src": "src/v1/interfaces/ICasimirUpkeep.sol:7",
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol:AutomationCompatibleInterface",
          "src/v1/interfaces/ICasimirCore.sol:ICasimirCore"
        ],
        "libraries": [],
        "methods": [
          "performUpkeep(bytes)",
          "setFunctionsRequest(string,string[],uint32)",
          "setFunctionsOracle(address)",
          "checkUpkeep(bytes)",
          "compoundStake()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/interfaces/ICasimirViews.sol:ICasimirViews": {
        "src": "src/v1/interfaces/ICasimirViews.sol:6",
        "inherit": [
          "src/v1/interfaces/ICasimirCore.sol:ICasimirCore"
        ],
        "libraries": [],
        "methods": [
          "getCompoundablePoolIds(uint256,uint256)",
          "getDepositedPoolCount()",
          "getDepositedPoolPublicKeys(uint256,uint256)",
          "getDepositedPoolStatuses(uint256,uint256)",
          "getOperators(uint256,uint256)",
          "getPoolConfig(uint32)",
          "getSweptBalance(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/libraries/CasimirArray.sol:CasimirArray": {
        "src": "src/v1/libraries/CasimirArray.sol:7",
        "version": {
          "withMetadata": "60667ddb45cc1dd2a0cefaa9560a948d6923039b0af1b1547ea85e9c207963f7",
          "withoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6",
          "linkedWithoutMetadata": "5cc1bfa58dabc87945e465d5d147adca6f09e6451b735c6cce7bc6ca5cb48ba6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/libraries/CasimirBeacon.sol:CasimirBeacon": {
        "src": "src/v1/libraries/CasimirBeacon.sol:13",
        "version": {
          "withMetadata": "616b19631da8ebacc544d58d771a2d52e3be1717702fdd79306018babd1f8d13",
          "withoutMetadata": "e91bdfe120817d7ce7d78bea6b147b06a9989365785c2e13e4d288a80c20bdae",
          "linkedWithoutMetadata": "e91bdfe120817d7ce7d78bea6b147b06a9989365785c2e13e4d288a80c20bdae"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createManager(address,address,address,(uint256,uint256,uint32,bool,bool,bool,bool,bool))",
          "createPool(address,address,uint64[],uint32,bytes,bytes)",
          "createRegistry(address,uint256,bool,bool)",
          "createUpkeep(address,address,address,bool)",
          "createViews(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/vendor/FunctionsClient.sol:FunctionsClient": {
        "src": "src/v1/vendor/FunctionsClient.sol:12",
        "inherit": [
          "@chainlink/contracts/src/v0.8/dev/interfaces/FunctionsClientInterface.sol:FunctionsClientInterface"
        ],
        "libraries": [
          "@chainlink/contracts/src/v0.8/dev/functions/Functions.sol:Functions"
        ],
        "methods": [
          "getDONPublicKey()",
          "estimateCost((uint8,uint8,uint8,string,bytes,string[]),uint64,uint32,uint256)",
          "handleOracleFulfillment(bytes32,bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FunctionsOracleInterface)4175",
              "contract": "FunctionsClient",
              "src": "src/v1/vendor/FunctionsClient.sol:13"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "FunctionsClient",
              "src": "src/v1/vendor/FunctionsClient.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(FunctionsOracleInterface)4175": {
              "label": "contract FunctionsOracleInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/vendor/interfaces/IAutomationRegistry.sol:IAutomationRegistry": {
        "src": "src/v1/vendor/interfaces/IAutomationRegistry.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getUpkeep(uint256)",
          "addFunds(uint256,uint96)",
          "cancelUpkeep(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/vendor/interfaces/IDepositContract.sol:IDepositContract": {
        "src": "src/v1/vendor/interfaces/IDepositContract.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit(bytes,bytes,bytes,bytes32)",
          "get_deposit_root()",
          "get_deposit_count()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/vendor/interfaces/IFunctionsBillingRegistry.sol:IFunctionsBillingRegistry": {
        "src": "src/v1/vendor/interfaces/IFunctionsBillingRegistry.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getSubscription(uint64)",
          "createSubscription()",
          "addConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/vendor/interfaces/IKeeperRegistrar.sol:IKeeperRegistrar": {
        "src": "src/v1/vendor/interfaces/IKeeperRegistrar.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerUpkeep((string,bytes,address,uint32,address,bytes,bytes,uint96))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      },
      "src/v1/vendor/interfaces/IWETH9.sol:IWETH9": {
        "src": "src/v1/vendor/interfaces/IWETH9.sol:7",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.18"
      }
    }
  ]
}